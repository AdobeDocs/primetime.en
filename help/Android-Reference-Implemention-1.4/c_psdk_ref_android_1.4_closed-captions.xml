<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_psdk_ref_closed-captions"> 
  <title>Closed captions</title> 
  <shortdesc>You can enable and build controls for 608 and 708 closed captions
	 as well as WebVTT subtitles. 
  </shortdesc> 
  <conbody> 
	 <p> 
	 <ul id="ol_04916D8B71FC41C6B5B0C091B2A69932"> 
		<li id="li_B869F80D79244A319F85E90361A9E3F2">When you select a media
		  item, you are provided with a user interface where you can choose to view
		  closed captions for that item. Active tracks are indicated by a 
		  <codeph>has activity</codeph> message. Selecting an active track turns
		  its visibility on. 
		</li> 
		<li id="li_24F136DF1A3B42AFBBD56A609C61C6D8">If you select CC, all the
		  closed caption tracks for the media item are displayed. 
		</li> 
		<li id="li_8808267D448048419217F68775640145">To remove the closed
		  captions, select None from the chooser dialog. 
		</li> 
	 </ul> 
	 </p> 
	 <p>To implement closed captions, you need to edit 
		<ph ><codeph>PlayerFragment.java</codeph> and add 
		  <codeph>CCManagerOn.java</codeph></ph>. 
	 </p> 
	 <p> 
		<fig id="fig_D436748848974AF99761ED2C2EC96B17"><image placement="break"
		  align="left" id="image_125CF1462056415F82B17A5E28A077D5"
		  href="images/closed-captions.jpg"></image> 
		</fig> 
	 </p> 
	 <p>The PlayerFragment calls the <apiname>displayClosedCaptioningDialog()</apiname> function, which
			populates the captions array with the tracks returned from the
				<codeph>CCManager</codeph>, using the function
				<apiname>getClosedCaptionTracks()</apiname>. </p> 
	 <p>When you select a language, the index or the language is passed back to the
				<codeph>CCManager</codeph> to be displayed on the device. If you select None, no
			captions are displayed. </p> 
	 <p> The <codeph>selectClosedCaptionTrack()</codeph> function from <codeph>CCManager</codeph>
			provides a list of all tracks in the player interface. </p> 
	 <p>The reference implementation reads the configuration parameters from the Android
				<codeph>SharedPreferences</codeph> file, for convenience. You can configure the
			player to read configuration from whatever source you are currently using. </p> 
  </conbody> 
</concept> 

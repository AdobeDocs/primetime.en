<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_content_resolver_opp_detect_impl"> 
  <title>Implement a custom opportunity detector</title> 
  <shortdesc>You can implement your own opportunity detectors by implementing
	 the interface 
	 <codeph>PlacementOpportunityDetector</codeph>. 
  </shortdesc> 
  <taskbody> 
	 <steps> 
		<step> 
		  <cmd>Create a custom 
			 <codeph>AdvertisingFactory</codeph> instance and override 
			 <codeph>createOpportunityDetector</codeph>. For example: 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax java">new AdvertisingFactory() {
    ...
    @Override
    public PlacementOpportunityDetector createOpportunityDetector(MediaPlayerItem item) {
        return new CustomPlacementOpportunityDetector();
    }
    ...
}</codeblock> 
		  </stepxmp> 
		</step> 
		<step>
				<cmd>Register the ad client factory to the <codeph>MediaPlayer</codeph>. For
					example: </cmd>
				<stepxmp>
					<codeblock outputclass="syntax java">// register the custom advertising factory with media player
advertisingFactory = createCustomAdvertisingFactory();
mediaPlayer.registerAdClientFactory(advertisingFactory);</codeblock>
				</stepxmp>
			</step> 
		<step>
				<cmd>Create a custom opportunity detector class that extends the
						<codeph>PlacementOpportunityDetector</codeph> class.</cmd>
				<substeps>
					<substep>
						<cmd> In the custom opportunity detector, override this function: </cmd>
						<info>
							<codeblock outputclass="syntax java">public List&lt;PlacementOpportunity&gt; process(List&lt;TimedMetadata&gt; timedMetadataList, Metadata metadata)</codeblock>
							<p>The <codeph>timedMetadataList</codeph> contains the list of available
									<codeph>TimedMetadata</codeph>, which is sorted. Metadata
								contains the targeting parameters and the custom parameters to be
								sent to the ad provider. </p>
						</info>
					</substep>
					<substep>
						<cmd>For each <codeph>TimedMetadata</codeph>, create a
								<codeph>List&lt;PlacementOpportunity&gt;</codeph>. The list can be
							empty, but not null. <codeph>PlacementOpportunity</codeph> should have
							the following attributes: </cmd>
						<info>
							<codeblock outputclass="syntax java">PlacementOpportunity(
    String id,                                      // can be id from timedMetadata
    PlacementInformation placementInformation   // PlacementInformation object containing Type, time, duration
    Metadata metadata                           // ad metadata containing targeting params sent to the ad provider
)</codeblock>
						</info>
					</substep>
					<substep>
						<cmd>After placement opportunities are created for all the detected timed
							metadata objects, simply return the
								<codeph>PlacementOpportunity</codeph> list. </cmd>
					</substep>
				</substeps>
			</step> 
	 </steps> 
	 <example> 
		<p> This is a sample custom placement opportunity detector: 
		</p> 
		<codeblock outputclass="syntax java">public class CustomPlacementOpportunityDetector implements PlacementOpportunityDetector {
    ...
    @Override
    public List&lt;PlacementOpportunity> process(List&lt;TimedMetadata> timedMetadataList, Metadata metadata) {
        ...
        List&lt;PlacementOpportunity> opportunities = new ArrayList&lt;PlacementOpportunity>();

        for (TimedMetadata timedMetadata : timedMetadataList) {

            if (isOpportunity(timedMetadata)) {        // check if given timedMetadata should be 
                                                       // considered as an opportunity

                // create an object of PlacementOpportunity and add it to the opportunities list
                PlacementOpportunity opportunity = 
                  createPlacementOpportunity(timedMetadata, airingId, metadata);
                Opportunities.add(opportunity);
            }
        }
        return opportunities;
    }   
    ...
}
</codeblock> 
	 </example> 
  </taskbody> 
</task> 

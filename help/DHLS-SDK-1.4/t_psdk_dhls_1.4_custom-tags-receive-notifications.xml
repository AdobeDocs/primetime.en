<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_ios_receiving-custom-hls-tag-notifications"> 
  <title>Add listeners for timed metadata notifications</title> 
  <shortdesc>To receive notifications about tags in the manifest, register the appropriate event
		listener(s). </shortdesc> 
  <taskbody> 
	 <context id="context_2E383D86FC844995B0E6B6F10BF5423E"> 
		<p>You can monitor timed metadata by listening for the following events, which notify your
				application of related activity:  <ul id="ul_D9A85E244D794B6AB65BE2AB17953B49">
					<li id="li_6AAAA9901F94450684D5DBA2BE6BA95E"
							><codeph>MediaPlayerItemEvent.ITEM_CREATED</codeph>: The initial list of
							<codeph>TimedMetadata</codeph> objects is available after the
							<codeph>MediaPlayerItem</codeph> is created. <p>This event notifies your
							application when this happens. </p>
					</li>
					<li id="li_754C27C6B36B44FF86D072ABE8843364"
							><codeph>MediaPlayerItemEvent.ITEM_UPDATED</codeph>: For live/linear
						streams where the manifest/playlist refreshes periodically, additional
						custom tags might appear in the updated playlist/manifest, so additional
							<codeph>TimedMetadata</codeph> objects might be added to the
							<codeph>MediaPlayerItem.timedMetadata</codeph> property. <p>This event
							notifies your application when this happens. </p>
					</li>
					<li id="li_95A2EA3AD2B34B9DAC2A65B0FAFADD06"
							><codeph>TimedMetadataEvent.TIMED_METADATA_AVAILABLE</codeph>: Each time
						a new <codeph>TimedMetadata</codeph> object is created, this event is
						dispatched by the MediaPlayer. <p>This event is not dispatched for the
								<codeph>TimedMetadata</codeph> object created during the
							initialization phase. </p>
					</li>
				</ul>
			</p> 
	 </context> 
	 <steps id="steps_72C7A8C512B246B18CEA760DE0B38D06"> 
		<step id="step_7045FFF29C0C4DEEB7CFF144B1D6C626">
				<cmd> Implement the appropriate listeners. </cmd>
				<info>
					<codeblock outputclass="syntax actionscript">private function onItemCreated(event:MediaPlayerItemEvent):void {
    var timedMetadataCollection:Vector.&lt;TimedMetadata&gt; = event.item.timedMetadata;
    // process the timed metadata collection
}
     
private function onItemUpdated(event:MediaPlayerItemEvent):void {
    var timedMetadataCollection:Vector.&lt;TimedMetadata&gt; = event.item.timedMetadata;
    // process the timed metadata collection
}
     
private function onTimedMetadataAvailable(event:TimedMetadataEvent):void {
    var timedMetadata:TimedMetadata = event.timedMetadata;
    // process timed metadata
}</codeblock>
				</info>
			</step> 
		<step  id="step_9A69993539C346E1B55074E03050F519"> 
		  <cmd> Register the event listeners. 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">player.addEventListener(MediaPlayerItemEvent.ITEM_CREATED, onItemCreated);
player.addEventListener(MediaPlayerItemEvent.ITEM_UPDATED, onItemUpdated);
player.addEventListener(TimedMetadataEvent.TIMED_METADATA_AVAILABLE, 
                        onTimedMetadataAvailable);</codeblock> 
		  </stepxmp> 
		</step> 
	 </steps> 
	 <postreq 
	  id="postreq_A9480A08723B4C26A43407C172F582DA">

		<p>ID3 metadata are dispatched through the same
					<codeph>TimedMetadataEvent.TIMED_METADATA_AVAILABLE</codeph>. This should not
				cause any confusion, however, because you can use a TimedMetadata objtec's
					<codeph>type</codeph> property to differentiate between TAG and ID3. For more
				information about ID3 tags, see <xref
					href="t_psdk_dhls_1.4_id3-metadata-retrieve.xml"
					format="dita" scope="local"><?xm-replace_text Get ID3 tags?></xref>. </p> 
		<p> 
		</p> 
	 </postreq> 
  </taskbody> 
</task> 

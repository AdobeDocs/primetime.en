<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="display-banner-ads"> 
  <title>Display banner ads</title> 
  <shortdesc>To display banner ads, you need to create banner instances and
	 allow 
	 <ph conkeyref="phrases/primetime-sdk-name"/> to listen for ad-related
	 events. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_F8FA813A9E6A459080D888A072033E9C"> 
		<p><ph conkeyref="phrases/primetime-sdk-name"/> provides a list of companion banner ads that are
				associated with a linear ad through the
					<codeph>AdPlaybackEvent.AD_STARTED</codeph>  event event. </p> 
		<p>Manifests can specify companion banner ads by: 
		<ul id="ul_65FA60CB3BB743A2A53E77B2324C0206"> 
		  <li id="li_1045325182FD4B48946A0B7B3009854D">An HTML snippet 
		  </li> 
		  <li id="li_79C93221C7AF412FA7896E279E6CC351">The URL of an iFrame page 
		  </li> 
		  <li id="li_A64E358C47B94033BF829D530A1B4913">The URL of a static image
			 or an Adobe Flash SWF file 
		  </li> 
		</ul> 
		</p> 
		<p>For each companion ad, 
		  <ph conkeyref="phrases/primetime-sdk-name"/> indicates which types are
		  available for your application. 
		</p> 
	 </context> 
	 <steps id="steps_9D6FF9E8358C4191AF0D137EF6F89482"> 
		<step id="step_87B9D4D86CDE48B9838BBA0D1500B177">
				<cmd>Add a listener for the <codeph>AdPlaybackEvent.AD_STARTED</codeph> event that
					does the following: </cmd>
				<substeps id="substeps_320896E7E5E74C4EBF32A5CA2522D5ED">
					<substep id="substep_6D81DC410E9F4D6697A53A3311ADA66A">
						<cmd>Clears existing ads in the banner instance. </cmd>
					</substep>
					<substep id="substep_1E2FDAE3480B46AE809409C5F47BC08F">
						<cmd>Gets the list of companion ads from
								<codeph>Ad.companionAssets</codeph>. </cmd>
					</substep>
					<substep id="substep_CB14BDDBF8E04E6A83DE24BBB28320C8">
						<cmd>If the list of companion ads is not empty, iterate over the list for
							banner instances. </cmd>
						<info> Each banner instance ( an <codeph>AdBannerAsset</codeph>) contains
							information, such as width, height, resource type (html, iframe, or
							static), and data that is required to display the companion banner.
						</info>
					</substep>
					<substep id="substep_7EEA51026D34481DB7FF7C48A9C2D036">
						<cmd>If a video ad has no companion ads booked with it, the list of
							companion assets contains no data for that video ad. </cmd>
						<info>To show a standalone display ad, add the logic to your script to run a
							normal DFP (DoubleClick for Publishers) display ad tag in the
							appropriate banner instance. </info>
					</substep>
					<substep id="substep_F28B189269D34AE8BABB0B839F67783F">
						<cmd>Sends the banner information to a function on your page <ph>,usually
								JavaScript, by using <codeph>ExternalInterface</codeph>,</ph> that
							displays the banners in an appropriate location. </cmd>
						<info>
							<p>This is usually a <codeph>div</codeph>, and your function uses the
									<codeph>div ID</codeph> to display the banner. For example: </p>
							<p >Add the event listener:
								<codeblock outputclass="syntax javascript">_player.addEventListener(AdobePSDK.PSDKEventType.AD_STARTED, onAdStarted);</codeblock>
							</p>
							<p>Implement the listener handler:
								<codeblock outputclass="syntax javascript">private function onAdStarted(event:AdPlaybackEvent):void {
    // check if there are any companion banner
    if (event.ad &amp;&amp; event.ad.companionAssets 
                 &amp;&amp; event.ad.companionAssets.length &gt; 0) {
        for each (var banner:AdBannerAsset in event.ad.companionAssets) {
            if (ExternalInterface.available) {
                //-- call the java script that will handle the banner display.
                ExternalInterface.call('addBanner', banner.resourceType, 
                    banner.width, banner.height, banner.bannerData);
            }
        }
    } 
    //...       
}</codeblock>
							</p>
							<p>Example of JavaScript to handle the display:
								<codeblock outputclass="syntax javascript">function addBanner(resourceType, width, height, data) {
    console.log(resourceType + "," +  width + "," +  height);

//Assume an html element on the page with id like 'banner300x250'
    var bannerDiv = document.getElementById('banner' + width + 
        'x' + height); 
    if (bannerDiv != null) {
        if (resourceType == "html") { // for html resource
            bannerDiv.innerHTML = data;
        }
        else if (resourceType == "iframe") { // for iframe resource
            bannerDiv.innerHTML = "&lt;iframe src='" + data + 
                "' width='100%' height='100%'&gt;&lt;/iframe&gt;";
        }
    }
}</codeblock>
							</p>
						</info>
					</substep>
				</substeps>
			</step> 
	 </steps> 
  </taskbody> 
</task> 

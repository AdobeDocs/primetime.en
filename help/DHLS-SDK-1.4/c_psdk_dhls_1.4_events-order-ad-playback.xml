<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_events_order_ad_playback"> 
  <title>Order of advertising events</title> 
  <shortdesc>When your playback includes advertising, 
	 <ph conkeyref="phrases/primetime-sdk-name"></ph> dispatches
	 events/notifications in generally expected sequences. Your player can implement
	 actions based on events in the expected sequence. 
  </shortdesc> 
  <conbody> 
	 <section id="section_69E3CCBC57BB48399799876E83908348"> 
		<p>When playing ads, the order of events is:  <ul id="ul_6C9833B9430B48B988BFF36564C5E646">
					<li id="li_C996FC54062147D69A22600185CA9AAA"
							><codeph>AdBreakPlaybackEvent.AD_BREAK_STARTED</codeph>
					</li>
					<li id="li_5B79B1A75BA14F9494D1C1C1B091C65C">The following are dispatched for
						every ad in the ad break: <ul id="ul_39E785559C354149BA6BEE7D72B27E68">
							<li id="li_C0279D3D306249D0B7413353D11055D5"
									><codeph>AdPlaybackEvent.AD_STARTED</codeph>
							</li>
							<li id="li_F3FD119A75114AF88A29A4CA660FC302"
									><codeph>AdPlaybackEvent.AD_PROGRESS</codeph> (multiple times
								during an ad's playback) </li>
							<li id="li_7B24F0190AA24E09A3EC53F28B933D91"
									><codeph>AdClickEvent.AD_CLICK</codeph> (for each click) </li>
							<li id="li_915226F8E662472E838DD81724EF0269"
									><codeph>AdPlaybackEvent.AD_COMPLETED</codeph>
							</li>
						</ul>
					</li>
					<li id="li_9245484816E64E72BE040911E7CC76A4"
							><codeph>AdBreakPlaybackEvent.AD_BREAK_COMPLETED</codeph>
					</li>
				</ul>
			</p> 
		<p>The following example shows a typical progression of ad playback
		  events: 
		</p> 
		<codeblock outputclass="syntax actionscript">mediaPlayer.addEventListener(AdBreakPlaybackEvent.AD_BREAK_STARTED, onAdBreakStarted);
private function onAdBreakStarted(event:AdBreakPlaybackEvent):void {
    var adBreak:AdBreak = event.adBreak;
    ...
}
mediaPlayer.addEventListener(AdBreakPlaybackEvent.AD_BREAK_COMPLETED, onAdBreakCompleted);
private function onAdBreakCompleted(event:AdBreakPlaybackEvent):void {
    var adBreak:AdBreak = event.adBreak;
    ...
}
mediaPlayer.addEventListener(AdPlaybackEvent.AD_STARTED, onAdStarted);
private function onAdStarted(event:AdPlaybackEvent):void {
    var adBreak:AdBreak = event.adBreak;
    var ad:Ad = event.ad;
    ...
}
mediaPlayer.addEventListener(AdPlaybackEvent.AD_PROGRESS, onAdProgress);
private function onAdProgress(event:AdBreakPlaybackEvent):void {
    var adBreak:AdBreak = event.adBreak;
    var ad:Ad = event.ad; 
    var progress:uint = event.progress;
    ...
}
mediaPlayer.addEventListener(AdPlaybackEvent.AD_COMPLETED, onAdCompleted);
private function onAdCompleted(event:AdPlaybackEvent):void {
    var adBreak:AdBreak = event.adBreak;
    var ad:Ad = event.ad;
    ...
}
mediaPlayer.addEventListener(AdClickEvent.AD_CLICK, onAdClick);
private function onAdClick(event:AdClickThroughEvent):void {
    var adBreak:AdBreak = event.adBreak;
    var ad:Ad = event.ad;
    var info:AdClick = event.adClick;
    ...
}
</codeblock> 
	 </section> 
  </conbody> 
</concept> 

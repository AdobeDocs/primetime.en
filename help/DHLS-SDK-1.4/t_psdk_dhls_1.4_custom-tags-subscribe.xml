<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_ios_subscribing-to-custom-hls-tags"> 
  <title>Subscribe to custom tags</title> 
  <shortdesc>
		<ph conkeyref="phrases/primetime-sdk-name"/> prepares <codeph>TimedMetadata</codeph> objects
		for subscribed tags each time these objects are encountered in the content manifest. </shortdesc> 
  <taskbody> 
	 <prereq id="prereq_97F61DC7EF5B4886B40F6BA733DA850C"> 
		<p>Before the playback starts, you must subscribe to the tags. 
		</p> 
	 </prereq> 
	 <context id="context_4A7DAA0F94244CEB83989280609474D9"> 
		<p >To subscribe to tags, assign a vector that contains
		  the custom tag names to the 
		  <codeph>subscribedTags</codeph> property. If you need to also change
		  the ad tags used by the default opportunity generator, then assign a vector
		  that contains the custom ad tag names to the 
		  <codeph>adTags</codeph> property. 
		</p> 
		<p>To be notified about custom tags in HLS manifests: 
		</p> 
	 </context> 
	 <steps id="steps_6A14089118AF4B628BB8FB4D02D4F3C1"> 
		<step id="step_39E5B7DBA6624B42B9A62E94BD8F2D74">
				<cmd>Set the custom ad tag names globally by assigning a vector that contains the
					custom tags to <codeph>subscribeTags</codeph> in
						<codeph>MediaPlayerItemConfig</codeph>. </cmd>
				<info>
					<note type="important">You must include the <codeph>#</codeph> prefix when
						working with HLS streams. </note>
					<p>For example:
						<codeblock outputclass="syntax actionsscript">var subscribedTags:Vector.&lt;String&gt; = new Vector.&lt;String&gt;();
subscribedTags.push("#EXT-X-ASSET");
subscribedTags.push("#EXT-X-AD");
PSDKConfig.subscribedTags = subscribedTags;</codeblock></p>
				</info>
			</step> 
		<step  id="step_647D12DF19144736B63631FB5BBC3A81"> 
		  <cmd>To globally change the ad tags that are used by the default
			 opportunity generator, assign a vector that contains the custom ad tag names to
			 the 
			 <codeph>adTags</codeph> property in 
			 <codeph>PSDKConfig</codeph>. 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">var adTags:Vector.&lt;String&gt; = new Vector.&lt;String&gt;();
adTags.push("#EXT-X-AD");
PSDKConfig.adTags = adTags;
</codeblock> 
		  </stepxmp> 
		</step> 
		<step  id="step_EDA2696A26A948C596A162488CA615F2"> 
		  <cmd>To have all the global settings take effect, replace the current
			 resource. 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">player.replaceCurrentResource(mediaResource);</codeblock> 
		  </stepxmp> 
		</step> 
		<step  id="step_F32549F61AD24FC2B9D98AFDA5F2D859"> 
		  <cmd >To set the subscribed tag names for a stream, if
			 needed: 
		  </cmd> 
		  <substeps id="substeps_B78F37C77216473796797FCC94DD2F04"> 
			 <substep id="substep_66955711F9C349379BF17798F1B10619"> 
				<cmd>Create a media player item configuration. 
				</cmd> 
				<info> 
				  <note type="tip">The easiest way is to create a default media
					 player item configuration. 
				  </note> 
				</info> 
			 </substep> 
			 <substep id="substep_175BA8D54C1B4B79B61A0B81A29AD608">
						<cmd> Assign a vector that contains the custom tags to
								<codeph>subscribeTags</codeph> in
								<codeph>MediaPlayerItemConfig</codeph>. </cmd>
					</substep> 
		  </substeps> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">var mediaPlayerItemConfig:MediaPlayerItemConfig = 
  new DefaultMediaPlayerItemConfig();
        
var subscribedTags:Vector.&lt;String&gt; = new Vector.&lt;String&gt;();
subscribedTags.push("#EXT-X-ASSET");
subscribedTags.push("#EXT-X-AD");
mediaPlayerItemConfig.subscribeTags = subscribedTags;</codeblock> 
		  </stepxmp> 
		</step> 
		<step  id="step_79902CF06CD64316BCCA48DACA45B6AD"> 
		  <cmd>To change the ad tags that are used by the default opportunity
			 generator in the specified stream, assign a vector that contains the custom ad
			 tag names to the 
			 <codeph>adTags</codeph> property in 
			 <codeph>mediaPlayerItemConfig</codeph> 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">var adTags:Vector.&lt;String&gt; = new Vector.&lt;String&gt;();
adTags.push("#EXT-X-AD");
mediaPlayerItemConfig.adTags = adTags;</codeblock> 
		  </stepxmp> 
		</step> 
		<step  id="step_15FA8977D6D144998316B04C051EE3C4"> 
		  <cmd>To have the changes for the stream take effect, when loading the
			 media stream, use the media player item configuration. 
		  </cmd> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">player.replaceCurrentResource(mediaResource, mediaPlayerItemConfig);</codeblock> 
		  </stepxmp> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

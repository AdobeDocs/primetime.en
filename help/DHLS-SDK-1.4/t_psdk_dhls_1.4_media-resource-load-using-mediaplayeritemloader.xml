<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="load-media-resource-using-mediaplayeritemloader"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Load a media resource using MediaPlayerItemLoader</title> 
  <shortdesc>Another way to resolve a media resource is with 
	 <codeph>MediaPlayerItemLoader</codeph>. This is useful when you want to
	 obtain information about a particular media stream without instantiating a 
	 <codeph>MediaPlayer</codeph> instance. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_43736748ECD549F9B761A1712905934C"> 
		<p>Through the 
		  <codeph>MediaPlayerItemLoader</codeph> class, you can exchange a media
		  resource for the corresponding 
		  <codeph>MediaPlayerItem</codeph> without attaching a view to a 
		  <codeph>MediaPlayer</codeph> instance, which would lead to the
		  allocation of the video decoding hardware resources. The process of obtaining
		  the 
		  <codeph>MediaPlayerItem</codeph> instance is asynchronous. 
		</p> 
	 </context> 
	 <steps id="steps_EEF20CA1E70546DBB8CF6405EF88331D">
		<step id="step_314F9966119845DF8B8ED699CC7EA625" >
		  <cmd>Implement event listeners for these 
			 <codeph>MediaPlayerItemLoader</codeph> events:
		  </cmd>
		  <info>
			 <ul id="ul_5F908619B9CF4715A18EDECBE66489C7">
				<li
				 id="li_E69D509BD54B4F80A86EAE3001E70E1E"><codeph>MediaPlayerItemLoaderEvent.ERROR</codeph>
				  event
				  <p><ph conkeyref="phrases/primetime-sdk-name"/> uses this to
					 inform your application that an error has occurred. 
					 <ph conkeyref="phrases/primetime-sdk-name"/> provides an error
					 property that contains diagnostic information.
				  </p>
				</li>
			 </ul>
		  </info>
		</step>
		<step id="step_34B4DF38D21B46B4A8CDC47387550A49" >
		  <cmd> Register this instance to the 
			 <codeph>MediaPlayerItemLoader</codeph>.
		  </cmd>
		</step>
		<step id="step_2F6F3A2CC9E243DD832AE9575232C1D1" >
		  <cmd>Call 
			 <codeph>DefaultMediaPlayerItemLoader.load</codeph>, passing an
			 instance of a 
			 <codeph>MediaResource</codeph> object. 
		  </cmd>
		  <info>
			 <p>The URL of the <codeph>MediaResource</codeph> object must point to the stream for which you
						want to obtain information. For example:
						<codeblock outputclass="syntax actionscript">private function onLoadError(event:MediaPlayerItemLoaderEvent):void {
    // something went wrong - look at the error code and description
    // contained within the event.error
}
private function onLoadCompleted(event:MediaPlayerItemLoaderEvent):void {
    // information is available - look at the data in the "event.item" object
}
// instantiate the MediaPlayerItemLoader object and register event listeners
var itemLoader:MediaPlayerItemLoader = new DefaultMediaPlayerItemLoader();
itemLoader.addEventListener(MediaPlayerItemLoaderEvent.ERROR, onLoadError);
itemLoader.addEventListener(MediaPlayerItemLoaderEvent.COMPLETED, onLoadCompleted);
// create the MediaResource instance and set the URL to point to the actual media stream
var mediaResource:MediaResource =
  MediaResource.createFromURL("http://example.com/media/test_media.m3u8", null);
// load the media resource
itemLoader.load(mediaResource);
</codeblock>
					</p>
		  </info>
		</step> 
	 </steps> 
  </taskbody> 
</task> 

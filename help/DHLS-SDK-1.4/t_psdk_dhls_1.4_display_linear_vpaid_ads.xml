<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_dhls_display_linear_vpaid_ads"> 
  <title>Display linear VPAID ads in an ad break</title> 
  <shortdesc>
		<ph conkeyref="phrases/primetime-sdk-name"
			><?xm-replace_text Phrase?></ph> supports displaying linear Video Player-Ad Interface
		Definition (VPAID) ads in an ad break. VPAID version 1.0 requires Flash, while version 2.0
		also works with Browser TVSDK and JavaScript.  </shortdesc> 
  <taskbody> 
	 <context id="context_0724E47C9CD14C248ADF7BE333F98108"> 
		<p>To display VPAID ads correctly, you must provide an ad container
		  (<codeph>AdContainerView</codeph>) within the 
		  <codeph>MediaPlayerContext</codeph> instance. 
		</p> 
		<p>Limitations for VPAID ads: 
		<ul id="ul_abv_ttg_cp"> 
		  <li id="li_280CCE1AE02E47EE8467BA204544F014">VPAID ads do not
			 necessarily have a predefined duration, given that the ad can be interactive.
			 Therefore, the ad duration (defined by the ad server response) may not always
			 exactly correspond to the true duration of the ad. 
		  </li> 
		  <li id="li_918570FF77D34DFE8B9B2BB5A7190AC3">For VPAID 1.0 ads, 
			 <ph
			 conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
			 requires Flash player 14.0.0.160 or greater installed on the device. For
			 earlier versions of the Flash player, this feature is disabled and VPAID 1.0
			 ads are skipped. 
		  </li> 
		</ul> 
		</p> 
		<p>To set up an ad container for displaying VPAID ads (version 1.0 or
		  2.0) within an ad break: 
		</p> 
	 </context> 
	 <steps id="steps_EC0C612B7CC64AAEBFC117C3531266FE"> 
		<step id="step_C54DC6A262A94E6191725DBFC3991EE9"> 
		  <cmd>Use the following sample code to set up an ad container that can
			 show VPAID ads. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax actionscript">var context:MediaPlayerContext = 
  new MediaPlayerContext(_authorizedFeatureHelper.authorizedFeatures);
 
adContainer = new AdContainerView();
adContainer.x = adContainer.y = 0;
adContainer.setSize(videoContainer.width, videoContainer.height);
addChild(adContainer);
 
context.adContainer = adContainer;
_player = new DefaultMediaPlayer(context);</codeblock> 
		  </info> 
		</step> 
		<step id="step_CAC0FF323897487A8CF0D441CC184A6A"> 
		  <cmd>When the view resizes, reset the size on the ad container. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax actionscript">adContainer.setSize(stage.stageWidth, stage.stageHeight);</codeblock> 
		  </info> 
		  <info> 
			 <note> When you get a full-screen-change event and you set the new size on the ad container,
						pass the stage display state as follows to ensure that the player resizes
						correctly:
						<codeblock outputclass="syntax actionscript">private function onFullScreenChange(event:FullScreenEvent):void {
if (_adContainer)
{ _adContainer.setSize(stage.stageWidth, stage.stageHeight, stage.displayState); }
}</codeblock>
					</note> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

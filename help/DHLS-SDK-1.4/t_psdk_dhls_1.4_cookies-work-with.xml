<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_cookies_work_with"> 
  <title>Work with cookies</title> 
  <shortdesc>You can use <ph conkeyref="phrases/primetime-sdk-name"/> to send arbitrary data in
		cookie headers for session management, gate access, and so on.  </shortdesc> 
  <taskbody> 
	 <context id="context_2D049ACC449D4C00B9FF7236171C451D"> 
		<p>Here is a example with some type of authentication when making
		  requests to the key server: 
		<ol id="ol_2AC5D596FCF4496091A5A783F5568A26"> 
		  <li id="li_9F8BB84BDB9D438BA7D851728099938D">Your customer logs into
			 your website in a browser and their login shows that they are allowed to view
			 content. 
		  </li> 
		  <li id="li_3D9B3B366F9049EDB8C218D56E4ABFE4">Your application generates
			 an authentication token, based on what is expected by the license server. Pass
			 that value to 
			 <ph conkeyref="phrases/primetime-sdk-name"/>. 
		  </li> 
		  <li id="li_A970C93350F7464CA6EB777572B73CFA"><ph
			 conkeyref="phrases/primetime-sdk-name"/> sets that value in the cookie header. 
		  </li> 
		  <li id="li_B497C8F0450444AA89E0A28BF62B9946">When 
			 <ph conkeyref="phrases/primetime-sdk-name"/> makes a request to the
			 key server to get a key to decrypt the content, that request contains the
			 authentication value in the cookie header, so the key server knows that the
			 request is valid. 
		  </li> 
		</ol> 
		</p> 
		<p>To work with cookies: 
		</p> 
	 </context> 
	 <steps id="steps_14E3151FE4F74971AE2EF0D60F071703"> 
		<step id="step_1C44E48F79B0418EB9A99DCE5E2E66AA" >
		  <cmd>Use the 
			 <codeph>cookieHeaders</codeph> property in 
			 <codeph>NetworkConfiguration</codeph> to set a cookie. The 
			 <codeph>cookieHeaders</codeph> property is a Metadata object, and you
			 can add key value pairs to this object to be included in the cookie header. 
		  </cmd>
		  <info>
			 <p>For example: 
			 </p>
			 <codeblock outputclass="syntax actionscript">var metadata:Metadata = new Metadata();
metadata.setValue(“val1”, “12345”);
metadata.setValue(“val2”, “abcd”);
 
networkConfiguration.cookieHeaders = metadata;</codeblock> 
			 <p >By default, cookie headers are sent only with
				key requests. To send cookie headers with all requests, set the 
				<codeph>NetworkConfiguration</codeph> property 
				<codeph>useCookieHeadersForAllRequests</codeph> to true. 
			 </p>
		  </info>
		</step> 
		<step  id="step_6AFF53148D1C4E54B7AA7B7A76B06EAF"> 
		  <cmd>To ensure that 
			 <codeph>NetworkConfiguration</codeph> works, set it as metadata: 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax actionscript">var networkConfiguration:NetworkConfiguration = new NetworkConfiguration();
networkConfiguration.forceNativeNetworking = true;
var resourceMetadata:Metadata = new Metadata();
resourceMetadata.setMetadata(DefaultMetadataKeys.NETWORK_CONFIGURATION_KEY, 
                             networkConfiguration);</codeblock> 
		  </info> 
		</step> 
		<step  id="step_A2DB06AE3B4042B59798C540649AB2AC"> 
		  <cmd>Provide the metadata from the previous step when you create a 
			 <codeph>MediaResource</codeph>. 
		  </cmd> 
		  <info> 
			 <p>For example, if you use the <codeph>createFromURL</codeph> method, enter the following
						information:
						<codeblock outputclass="syntax actionscript">var resource:MediaResource = MediaResource.createFromURL(url, resourceMetadata);</codeblock>
					</p> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

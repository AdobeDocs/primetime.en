<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="t_psdk_va_integrate-heartbeats-ios"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Initialize and configure video analytics </title> 
  <shortdesc>You can configure your player to track and analyze video use. 
  </shortdesc> 
  <taskbody> 
	 <prereq id="prereq_255E01DCF8D44761BD477B63CA8CAD62"> Before activating
		video tracking (video heartbeats), ensure that you have the following: 
		<ul id="ul_2C68EC5C23354744884967A4E4BB9690"> 
		  <li id="li_14C78AB51D6A4102A1C71B76FFFB64BA"><ph conkeyref="phrases/primetime-sdk-name"/> 2.5
					for Android. </li> 
		  <li id="li_810BC5867ABF4314B1A49031E0C6DE6D">Configuration /
			 Initialization Information
			 <p>Contact your Adobe representative for your specific video-tracking
				account information: 
			 <table id="table_3565328ABBEE4605A92EAE1ADE5D6F84"> 
				<tgroup cols="2"><colspec colnum="1" colname="col1"
				  colwidth="1.00*"/><colspec colnum="2" colname="col2" colwidth="1.92*"/> 
				  <tbody> 
					 <row> 
						<entry colname="col1"><filepath>ADBMobileConfig.json</filepath>
										</entry> 
						<entry colname="col2"> 
						  <note type="important">This JSON config file name must remain
												<filepath>ADBMobileConfig.json</filepath>. The
												name and the path of this configuration file cannot
												be changed. The path to this file must be
												<filepath>&lt;source root&gt;/assets</filepath>. </note> 
						</entry> 
					 </row> 
					 <row> 
						<entry colname="col1">AppMeasurement tracking server endpoint
						  
						</entry> 
						<entry colname="col2">The URL of the Adobe Analytics
						  (formerly SiteCatalyst) back-end collection endpoint. 
						</entry> 
					 </row> 
					 <row> 
						<entry colname="col1">Video analytics tracking server
						  endpoint 
						</entry> 
						<entry colname="col2">The URL of the video analytics back-end
						  collection endpoint. This is where all video heartbeat tracking calls are sent.
						  
						  <note type="tip">The URL of the visitor tracking server is
							 the same as the URL of the analytics tracking server. For information about
							 implementing the Visitor ID Service, see 
							 <xref
							  href="https://marketing.adobe.com/resources/help/en_US/mcvid/mcvid-setup-target.html"
							  format="html" scope="external">Implement ID Service</xref>. 
						  </note> 
						</entry> 
					 </row> 
					 <row> 
						<entry colname="col1">Account name 
						</entry> 
						<entry colname="col2">Also known as the Report Suite ID
						  (RSID). 
						</entry> 
					 </row> 
					 <row> 
						<entry colname="col1">Marketing Cloud organization ID 
						</entry> 
						<entry colname="col2">A string value required for
						  instantiating the Visitor component. 
						</entry> 
					 </row> 
				  </tbody> 
				</tgroup> 
			 </table>
			 </p>
		  </li> 
		</ul> 
	 </prereq> 
	 <context id="context_62D2FBBC95CE4A37988D58989AEE9A3F"> 
		<p>To configure video tracking in your player: 
		</p> 
	 </context> 
	 <steps id="steps_9EC0594E8F764CD3A888ECF4B07D653A"> 
		<step id="step_57E0692614FD419098432FA3B413A864"> 
		  <cmd>Confirm that load-time options in the 
			 <codeph>ADBMobileConfig.json</codeph> resource file are correct. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax json">{
    "version" : "1.1",
    "analytics" : {
        "rsids" : "adobedevelopment",
        "server" : "10.131.129.149:3000",
        "charset" : "UTF-8",
        "ssl" : false,
        "offlineEnabled" : false,
        "lifecycleTimeout" : 5,
        "batchLimit" : 50,
        "privacyDefault" : "optedin",
        "poi" : []
    },
    "marketingCloud": {
        "org": "ADOBE PROVIDED VALUE" 
    },
    "target" : {
        "clientCode" : "",
        "timeout" : 5
    },
    "audienceManager" : {
        "server" : ""
    }
}</codeblock> 
			 <p> This JSON-formatted configuration file is bundled as a resource
				with <ph conkeyref="phrases/primetime-sdk-name"/>. Your player reads these values only at load time, and the values
				remain constant while your application runs. 
			 </p> 
			 <p>To configure load-time options: 
			 <ol id="ol_55FA4CD6079F4419BF16644AEA5869F3">
				<li id="li_6EF3EE328A934EC1BDC7FB8EE49A9C43">Confirm that the
									<codeph>ADBMobileConfig.json</codeph> file contains the
								appropriate values (provided by Adobe). </li>
				<li id="li_6465D3BB8B764190A4F90498E0C82894">Confirm that this file is located in the
									<codeph>assets/</codeph> folder. <p>This folder must be located
									in the root of your application source tree. </p>
							</li>
				<li id="li_0B5DE2652AE34EAD8114F42D17E1F394">Compile and build your
				  application. 
				</li>
				<li id="li_865B45F6DBC94C6CAC38E1F8A365835C">Deploy and run the
				  bundled application. 
				  <p>For more information about these AppMeasurement settings, see 
					 <xref
					  href="https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/video/"
					  format="html" scope="external">Measuring Video in Adobe Analytics</xref>. 
				  </p>
				</li>
			 </ol>
			 </p> 
		  </info> 
		</step> 
		<step id="step_F76D58BAF27F4BD5844CF6366F32728C"> 
		  <cmd>Initialize and configure video heartbeat tracking metadata. 
		  </cmd> 
		  <info> 
			 <note type="important">You can stop the video analytics module midstream and reinitialize it
						again as necessary. Before the module is reinitialized, ensure that the
						video analytics metadata is also updated to the correct content metadata. To
						recreate the metadata, repeat the first two steps below (sub-steps <b>a</b>
						and <b>b</b>). </note> 
		  </info> 
		  <substeps id="substeps_8A0CCB1BAAD845178C1A402907FD9B65"> 
			 <substep id="substep_36D0A17AC1434071BFFDBB2465CF4DB2"> 
				<cmd>Create an instance of the Video Analytics metadata. 
				</cmd> 
				<info>This instance contains all of the configuration information that is needed to enable video
							heartbeat tracking. For example:
							<codeblock outputclass="syntax java">private VideoAnalyticsMetadata getVideoAnalyticsTrackingMetadata() {
    VideoAnalyticsMetadata vaMetadata = new VideoAnalyticsMetadata();
 
    vaMetadata.setTrackingServer("example.com");
    vaMetadata.setChannel("test-channel");
    vaMetadata.setVideoName("myvideo");
    vaMetadata.setVideoId("myvideoid");
    vaMetadata.setPlayerName("PSDK Player");
    vaMetadata.setUseSSL(false);
    vaMetadata.debugLogging = true; // Set to NO for production deployment.
    vaMetadata.setEnableChapterTracking(true);
    // use this API to override the default asset length -1 for live streams
    vaMetadata.setAssetDuration(SAMPLE_ASSET_DURATION);
 
    return vaMetadata;
}</codeblock>
						</info> 
			 </substep>
					<substep id="substep_6D1A4CDF4B1740C9A810DEECD56F4B87">
						<cmd>Initialize the Video Analytics provider. </cmd>
						<info>After creating a media player instance, you must create a Video Analytics provider
							instance and provide the application context to it. <note type="tip"
								>Always create a new provider instance for each content playback
								session and remove the previous reference after you detach the media
								player instance.
							</note><codeblock outputclass="syntax java">VideoAnalyticsProvider videoAnalyticsProvider = new VideoAnalyticsProvider(appContext);
</codeblock>
						</info>
					</substep>
					<substep>
						<cmd>Set the Video Analytics metadata on the
								<codeph>videoAnalyticsProvider</codeph> instance.</cmd>
						<info>
							<codeblock outputclass="syntax java">videoAnalyticsProvider.setVideoAnalyticsMetadata(vaMetadata);</codeblock>
						</info>
					</substep> 
			 <substep id="substep_C30CDF86898D458C81D8D3A79106BBD3">
						<cmd>Attach the media player instance to the
								<codeph>videoAnalyticsProvider</codeph> instance:</cmd>
						<info>
							<codeblock outputclass="syntax java">videoAnalyticsProvider.attachMediaPlayer(mediaPlayer); </codeblock>
						</info>
						<stepxmp/>
					</substep> 
			 <substep id="substep_E79EB63CB1D94BD39F7BDCF72F452EED">
						<cmd>Destroy the Video Analytics provider. </cmd>
						<info>Before you begin a new content playback session, destroy the previous instance of the
							video provider. After you receive the content complete event (or
							notification), wait a few minutes before you destroy the video analytics
							provider instance. Destroying the instance immediately might interfere
							with the Video Analytics provider's ability to send a "video complete"
							ping. </info>
						<stepxmp>
							<codeblock outputclass="syntax java">if (videoAnalyticsProvider) {
    videoAnalyticsProvider.detachMediaPlayer();
    videoAnalyticsProvider = null;
}</codeblock>
						</stepxmp>
					</substep> 
			 <substep id="substep_C327C9E2BD7946ACB41A2B87AD9CE2E5"> 
				<cmd>Manually mark the Live/Linear stream as complete. 
				</cmd> 
				<info>If you have various episodes on one live stream, you can manually mark an episode as
							complete by using the complete API. This ends the video tracking session
							for the current video episode, and you can start a new tracking session
							for the next episode. <note type="tip">This API is optional and does not
								work for VOD video tracking. </note>
						</info> 
				<stepxmp> 
				  <codeblock outputclass="syntax java">if (videoAnalyticsProvider) {
    videoAnalyticsProvider.trackVideoComplete();   
}</codeblock> 
				</stepxmp> 
			 </substep> 
		  </substeps> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

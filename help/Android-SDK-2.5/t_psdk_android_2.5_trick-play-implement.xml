<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_trick_play_implement"> 
  <title>Implement fast forward and rewind</title> 
  <shortdesc>When users fast forward or fast rewind through the media, they are
	 in the 
	 <term>trick play</term> mode. To enter trick play mode, set the 
	 <codeph>MediaPlayer</codeph> playback rate to a value other than 1.
  </shortdesc> 
  <taskbody> 
	 <context id="context_95877D761D324FBCB5867D52828CF96C"> 
		<p>To switch the speed, you must set one value.
		</p> 
	 </context> 
	 <steps id="steps_2F6B39DEDAC14B139C8CBC7BE32A0E9A"> 
		<step id="step_684C22AA677245EFB9D8ABDA2655D4F2"> 
		  <cmd> Move from normal play mode (1x) to trick play mode by setting the
			 rate on the 
			 <codeph>MediaPlayer</codeph> to an allowed value.
		  </cmd> 
		  <info>
			 <p> Remember the following information:
			 <ul id="ul_F1CF8A8A656B4FD385EAC13CA46E6158"> 
				<li id="li_A181DBF1E7CA4F73BDA0F312E022700E">The 
				  <codeph>MediaPlayerItem</codeph> class defines the allowed
				  playback rates. 
				</li> 
				<li id="li_3A7BE5908C124396BDE6940ECE03C196"><ph conkeyref="phrases/primetime-sdk-name"/> selects the
				  closest allowed rate if the specified rate is not allowed. 
				</li> 
			 </ul>
			 </p> 
			 <p>The following example sets the player's internal playback rate to the requested rate:
						<codeblock outputclass="syntax javadoc">import com.adobe.mediacore.MediaPlayer;
import com.adobe.mediacore.MediaPlayerItem;
import com.adobe.mediacore.MediaPlayerException;
import java.util.List;
import java.lang.Float;

private boolean setPlaybackRate(MediaPlayer player, float rate) 
  throws MediaPlayerException {
    // Get list of playback rates that the media player supports
    MediaPlayerItem item = player.getCurrentItem();
    if (item == null) return false;
    List&lt;Float&gt; availableRates = player.getCurrentItem().getAvailablePlaybackRates();

    // Return false if requested rate is not supported
    if (availableRates.indexOf(rate) == -1) return false;

    // Otherwise set the playback rate to the requested rate 
    // (this can throw MediaPlayerException)
    player.setRate(rate);
    return true;
}</codeblock>
					</p>
		  </info> 
		</step> 
		<step id="step_8D8EB8BEC5204910BDAF6375428AC9AD"> 
		  <cmd>You can optionally listen for rate-change events, which notifies
			 you when you requested a rate change and when the rate change actually occurs. 
		  </cmd> 
		  <info> 
			 <p> <ph conkeyref="phrases/primetime-sdk-name"/> dispatches the following events that are related to trick
				play: 
			 <ul id="ul_BF2FD8D3775F44F09D9C302EF43E50B2"> 
				<li
				id="li_7B46D406A3204E469E0B5F8086866C2A"><codeph>MediaPlayerEvent.RATE_SELECTED</codeph>,
				  when the 
				  <codeph>rate</codeph> value changes to a different value. 
				</li> 
				<li
				id="li_1D78616C3484466A860D7B9FEC4A77BE"><codeph>MediaPlayerEvent.RATE_PLAYING</codeph>,
				  when playback resumes at the selected rate. 
				</li> 
			 </ul><ph conkeyref="phrases/primetime-sdk-name"/> dispatches these events when the player returns from trick
			 play mode to normal play mode. 
			 </p> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

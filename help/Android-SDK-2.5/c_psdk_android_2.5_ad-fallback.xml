<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ad-fallback-vast"> 
  <title>Ad fallback for VAST and VMAP ads</title> 
  <shortdesc> For Digital Video Ad Serving Template (VAST) ads (or creatives)
	 that have the fallback rule enabled, <ph conkeyref="phrases/primetime-sdk-name"/> treats an ad with an invalid media
	 type as an empty ad and attempts to use fallback ads in its place. You can
	 configure some aspects of fallback behavior. 
  </shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<keyword>zero length ad</keyword>
				<keyword>empty ad</keyword>
			</keywords>
		</metadata>
	</prolog> 
  <conbody> 
	 <p>The VAST/Digital Video Multiple Ad Playlist (VMAP) specification states
		that for ads that have VAST fallback enabled, empty ads automatically trigger
		the use of fallback ads. When a VAST ad is empty, <ph conkeyref="phrases/primetime-sdk-name"/> looks for a valid HLS
		media type replacement among the fallback ads. When a VAST ad in a wrapper has
		an invalid media type, <ph conkeyref="phrases/primetime-sdk-name"/> treats this ad as empty. You can configure whether
		<ph conkeyref="phrases/primetime-sdk-name"/> should do the same for ads inline in a VMAP. For more information about
		the VAST 
		<codeph>fallbackOnNoAd</codeph> feature, see 
		<xref
		 href="http://www.iab.net/guidelines/508676/digitalvideo/vsuite/vast"
		 format="http" scope="external">Digital Video Ad Serving Template (VAST)
		  3.0</xref>. 
	 </p>
		<p>
			<note><b>Zero Length Ads</b> - When <ph conkeyref="phrases/primetime-sdk-name"/> encounters a
				VAST response that contains an ad of zero duration, or an ad break with no ads, it
				fires AD_BREAK_START / AD_BREAK_COMPLETE events for those zero-length ad breaks.
					<i>This behavior applies only for VOD streams.</i>
				<ph conkeyref="phrases/primetime-sdk-name"/> fires these events even when your app
				is using the SKIP ad policy. <p><ph conkeyref="phrases/primetime-sdk-name"/> does
						<i>not</i> fire AD_BREAK_START / AD_BREAK_COMPLETE events for Live streams,
					or when a user employs trickplay or seek to go past the zero-length ad.
				</p></note>
		</p> 
  </conbody> 
</concept> 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "technicalContent/dtd/reference.dtd">
<reference id="r_psdk_android_caption-formatting-samples"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Caption formatting examples</title> 
  <shortdesc>Here are some examples that show you how to specify closed caption
	 formatting. 
  </shortdesc> 
  <refbody> 
	 <section id="section_BD7B48F3B66D4E9290E1CB2F464E08E4"> 
		<title>Example 1: Specify format values explicitly</title> 
		<codeblock outputclass="syntax java">private final MediaPlayer.PlaybackEventListener _playbackEventListener =
  new MediaPlayer.PlaybackEventListener() {
    @Override
    public void onPrepared() {
        // Set CC style.
        TextFormat tf = new TextFormatBuilder(
            TextFormat.Font.DEFAULT,
            TextFormat.Size.DEFAULT,
            TextFormat.FontEdge.DEFAULT,
            TextFormat.Color.DEFAULT.getValue(),
            TextFormat.Color.DEFAULT.getValue(),
            TextFormat.Color.DEFAULT.getValue(),
            TextFormat.Color.DEFAULT.getValue(),
            TextFormat.DEFAULT_OPACITY,
            TextFormat.DEFAULT_OPACITY,
            TextFormat.DEFAULT_OPACITY).toTextFormat();

        mediaPlayer.setCCStyle(tf);
        ...
    }
}
</codeblock> 
	 </section> 
	 <section id="section_147036D7C31C4010A5A7DF49997014A9"> 
		<title>Example 2: Specify format values in parameters</title> 
		<codeblock outputclass="syntax java">/**
* Constructor using parameters to initialize a TextFormat.
*
* @param font
* The desired font.
* @param size
* The desired text size.
* @param fontEdge
* The desired font edge.
* @param fontColor
* The desired font color.
* @param backgroundColor
* The desired background color.
* @param fillColor
* The desired fill color.
* @param edgeColor
* The desired color to draw the text edges.
* @param fontOpacity 
* The desired font opacity.
* @param backgroundOpacity
* The desired background opacity.
* @param fillOpacity
* The desired fill opacity. 
*/
public <b>TextFormatBuilder</b>(
    Font font, Size size, FontEdge fontEdge,
    String fontColor, String backgroundColor,	
    String fillColor, String edgeColor,
    int fontOpacity, int backgroundOpacity,
    int fillOpacity);
/**
* Creates a TextFormat with the parameters supplied to this builder.
*/
public TextFormat <b>toTextFormat</b>();
/**
* Sets the text font.
* @param font The desired font
* @return This builder object to allow chaining calls
*/
public <b>TextFormatBuilder</b> setFont(Font font);
...</codeblock> 
	 </section> 
  </refbody> 
</reference> 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ovv_vcj_mz">
 <title>Client error handling for broken VMAP</title>
 <shortdesc>When <ph conkeyref="phrases/primetime-sdk-name">TVSDK</ph> encounters a broken VMAP in
  an ad server response, it dispatches an 1109 (<codeph>NETWORK_AD_URL_FAILED</codeph>) error. </shortdesc>
 <prolog>
  <metadata>
   <keywords>
    <keyword>1109</keyword>
    <keyword>NETWORK_AD_URL_FAILED</keyword>
    <keyword>broken VMAP</keyword>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
  <p>Depending upon the nature of the ad server response, and upon your ad loading settings, your
   player could receive different numbers of 1109 errors when <ph
    conkeyref="phrases/primetime-sdk-name">TVSDK</ph> encounters a broken VMAP in an ad server
   response.</p>
  <p>Let's consider a scenario in which the ad server response points to VMAP XML. Let's also say
   that the ad server response has four available ad slots, each of which points to the same VMAP.
   Finally, let's say that this VMAP is broken.</p>
  <p>In this scenario, if lazy ad resolving is enabled (<xref
    href="t_psdk_android_2.5_enable-lazy-ad-resolving.xml"/>), <ph
    conkeyref="phrases/primetime-sdk-name">TVSDK</ph> will dispatch two 1109 errors (not one as
   might be expected): one error is dispatched on each parsing pass over the timeline. This is
   because when lazy ad resolving is enabled, <ph conkeyref="phrases/primetime-sdk-name">TVSDK</ph>
   parses the ads in 2 passes: the first pass happens just before the content playback starts for
   pre-roll ads, and the second pass happens after playback starts, for mid-roll and post-roll
   ads.</p>
  <note>In this scenario, if you disable lazy ad resolving, <ph
    conkeyref="phrases/primetime-sdk-name">TVSDK</ph> will fire only one 1109 error (only one
   parsing pass). </note>
 </conbody>
</concept>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="load-a-media-resource"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Load a media resource in the media player</title> 
  <shortdesc> Load a resource by directly instantiating a <codeph>MediaResource</codeph> and loading
		the video content to be played. This is one way of loading a media resource. </shortdesc> 
  <taskbody> 
	 <steps> 
		<step>
				<cmd>Set the media player to play the new resource. </cmd>
				<info>Replace the currently playable item by calling
						<codeph>MediaPlayer.replaceCurrentResource()</codeph> and passing an
					existing <codeph>MediaResource</codeph> instance. <p>This starts the resource
						loading process. </p>
				</info>
			</step> 
		<step> 
		  <cmd>Register the <codeph>MediaPlayerEvent.STATUS_CHANGED</codeph> event with the 
				<codeph>MediaPlayer</codeph> instance.
			 In the callback, check for at least the
				following status values: 
		  </cmd> 
		  <choices> 
			 <choice> 
				<codeph>MediaPlayerStatus.PREPARED</codeph> 
			 </choice> 
			 <choice> 
				<codeph>MediaPlayerStatus.INITIALIZED</codeph> 
			 </choice> 
			 <choice> 
				<codeph>MediaPlayerStatus.ERROR</codeph> 
			 </choice> 
		  </choices> 
		   
		  <info>Through these events, the 
			 <codeph>MediaPlayer</codeph> object notifies your application when it has successfully loaded
			 the media resource. 
		  </info> 
		</step> 
		 
		<step>
				<cmd>When the status of the media player changes to <codeph>INITIALIZED</codeph>,
					you can call <codeph>MediaPlayer.prepareToPlay()</codeph>. </cmd>
				<info> This status indicates that the media has been successfully loaded. The new
						<codeph>MediaPlayerItem</codeph> is ready for playback. Calling
						<codeph>prepareToPlay()</codeph> starts the advertising resolution and
					placement process, if any. </info>
			</step> 
	 </steps> 
	 <result>If a failure occurs, the media player switches to the <codeph>ERROR</codeph> status. </result> 
	 <example> 
		<p>The following simplified sample code illustrates the process of
		  loading a media resource: 
		</p> 
		 
<codeblock outputclass="syntax java">// mediaResource is a properly configured MediaResource instance
// mediaPlayer is a MediaPlayer instance
// register a PlaybackEventListener implementation with the MediaPlayer instance
mediaPlayer.addEventListener(MediaPlayerEvent.STATUS_CHANGED, 
  new StatusChangeEventListener() {
    @Override
    public void onStatusChanged(MediaPlayerStatus status) {
        if(event.getStatus() == MediaPlayerStatus.PREPARED) {
            // The resource is successfully loaded and available. The 
            // MediaPlayer is ready to start the playback and can
            // provide a reference to the current playable item
            MediaPlayerItem playerItem = mediaPlayer.getCurrentItem();
            if (playerItem != null) {
                // We can look at the properties of the loaded stream
            }
        }
        else if (event.getStatus() == MediaPlayerStatus.ERROR) {
            //Something bad happened - the resource cannot be loaded.
            // The Metadata object in the event provides details.
        }
        else if (status == MediaPlayerStatus.INITIALIZED) {
            mediaPlayer.prepareToPlay();
        }
    }
}
</codeblock> 
		 
		 
		 
	 </example> 
  </taskbody> 
</task> 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="set-up-error-handling"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Set up error handling</title> 
  <shortdesc>You can set up one lace to handle errors. 
  </shortdesc> 
  <taskbody> 
	 <steps id="steps_FE6E4CCAD4CE40E792E290454BE661DA"> 
		<step id="step_E372BB1C71984683B893608D34BEBD0F"> 
		  <cmd>Implement an event callback function for 
			 <codeph>MediaPlayerEvent.STATUS_CHANGED</codeph>. 
		  </cmd> 
		  <info><ph conkeyref="phrases/primetime-sdk-name"/> passes event information, such as a 
			 <codeph>MediaPlayerStatusChangeEvent</codeph> object. 
		  </info> 
		</step> 
		<step id="step_BE18DEAE390B40E89D21C1484D00BC05">
				<cmd>In the callback, when the returned status is
						<codeph>MediaPlayerStatus.ERROR</codeph>, provide logic to handle all
					errors. </cmd>
			</step> 
		<step id="step_8F768B652E5A4767BC75EDAA19034DB4"> 
		  <cmd>After the error is handled, reset the 
			 <codeph>MediaPlayer</codeph> object or load a new media resource. 
		  </cmd> 
		  <info> 
			 <p>When the <codeph>MediaPlayer</codeph> object is in the error status it remains in that status
						until you reset it using the <codeph>MediaPlayer.reset</codeph> method. </p> 
		  </info> 
		</step> 
	 </steps> 
	 <example id="example_E74BB605ED08450295B8902F1E4BB8F5"> 
		<p>For example:
				<codeblock outputclass="syntax java">mediaPlayer.addEventListener(MediaPlayerEvent.STATUS_CHANGED, 
  new StatusChangeEventListener() {
    @Override
    public void onStatusChanged(MediaPlayerStatusChangeEvent event) {
        if (event.getStatus() == MediaPlayerStatus.ERROR) {
        // handle TVSDK error here
        }
    }
});</codeblock>
			</p> 
	 </example> 
  </taskbody> 
</task> 

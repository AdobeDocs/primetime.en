<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="set-closed-captions-styles-2.5"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Set closed-caption styles</title> 
  <shortdesc>You can style the closed-caption text with 
	 <ph conkeyref="phrases/primetime-sdk-name"/> methods. 
  </shortdesc> 
  <taskbody> 
	 <steps id="steps_syp_frq_hz"> 
		<step id="step_94A0803182DB43D7B3DF151AD54BB91B"> 
		  <cmd>Wait for the media player to be in at least the 
			 <codeph>PREPARED</codeph> status.
		  </cmd> 
		</step> 
		<step id="step_5E45818664FD43979407760D301E0D66"> 
		  <cmd>Create a 
			 <codeph>TextFormatBuilder</codeph> instance. 
		  </cmd> 
		  <info> 
			 <p>You can provide all the closed-caption styling parameters now or
				set them later. 
			 </p> 
		  </info> 
		  <info> 
			 <p><ph conkeyref="phrases/primetime-sdk-name"/> encapsulates
				closed-caption styling information in the 
				<codeph>TextFormat</codeph> interface. The 
				<codeph>TextFormatBuilder</codeph> class creates objects that
				implement this interface. 
			 </p> 
			 <codeblock outputclass="syntax java">public TextFormatBuilder(
   TextFormat.Font font,
   TextFormat.Size size,
   TextFormat.FontEdge fontEdge,
   java.lang.String fontColor,
   java.lang.String backgroundColor,
   java.lang.String fillColor,
   java.lang.String edgeColor,
   int fontOpacity,
   int backgroundOpacity,
   int fillOpacity
   java.lang.String bottomInset,
   java.lang.String safeArea)</codeblock> 
		  </info> 
		</step> 
		<step id="step_6E48E306E0A447558CCCBF6A0C85E81B"> 
		  <cmd>To obtain a reference to an object that implements the 
			 <codeph>TextFormat</codeph> interface, call the 
			 <codeph>TextFormatBuilder.toTextFormat</codeph> public method. 
		  </cmd> 
		  <info>This returns a 
			 <codeph>TextFormat</codeph> object that can be applied to the media
			 player. 
			 <codeblock outputclass="syntax java">public TextFormat toTextFormat()</codeblock> 
		  </info> 
		</step> 
		<step id="step_E2F47DDBFE17471D9B17AEE43152B121"> 
		  <cmd>Optionally get the current closed-caption style settings by doing
			 one of the following: 
		  </cmd> 
		  <choices id="choices_typ_frq_hz"> 
			 <choice id="choice_822B51B7C2AA4102A098517EA59380CA">Get all the
				style settings with 
				<codeph>MediaPlayer.getCCStyle</codeph>. 
				<p>The return value is an instance of the 
				  <codeph>TextFormat</codeph> interface. 
				  <codeblock outputclass="syntax java">/**
* @return the current closed captioning style. 
* If no style was previously set, it returns a TextFormat object
* with default values for each attribute.
* @throws MediaPlayerException if media player was already released.
*/
public TextFormat getCCStyle() throws MediaPlayerException;</codeblock> 
				</p> 
			 </choice> 
			 <choice id="choice_68582D8A56AE4FAEA58B60897968C4E2">Get the settings
				one at a time through the 
				<codeph>TextFormat</codeph> interface getter methods. 
				<codeblock outputclass="syntax java">public java.lang.String getFontColor();
public java.lang.String getBackgroundColor();
public java.lang.String getFillColor(); // retrieve the font fill color
public java.lang.String getEdgeColor(); // retrieve the font edge color
public TextFormat.Size getSize(); // retrieve the font size
public TextFormat.FontEdge getFontEdge(); // retrieve the font edge type
public TextFormat.Font getFont(); // retrieve the font type
public int getFontOpacity();
public int getBackgroundOpacity();
public java.lang.String getBottomInset(java.lang.String bi);
public java.lang.String getSafeArea(java.lang.String sa);</codeblock> 
			 </choice> 
		  </choices> 
		</step> 
		<step id="step_4478436DCA14459DA6E5A0853A213AF7"> 
		  <cmd>To change the style settings, do one of the following: 
		  </cmd> 
		  <choices id="choices_uyp_frq_hz"> 
			 <choice id="choice_91D75C658E0F4D4783549B65F25D8C9A">Use the setter
				method 
				<codeph>MediaPlayer.setCCStyle</codeph>, passing an instance of the
				
				<codeph>TextFormat</codeph> interface: 
				<codeblock outputclass="syntax java">/**
* Sets the closed captioning style. Used to control the closed captioning font,
* size, color, edge and opacity. 
*
* This method is safe to use even if the current media stream doesn't have closed
* captions.
*
* @param textFormat
* @throws MediaPlayerException
*/
public void setCCStyle(TextFormat textFormat) throws MediaPlayerException;</codeblock> 
			 </choice> 
			 <choice id="choice_BE4BBC46F030441EA5B12BF322E7D0BB">Use the 
				<codeph>TextFormatBuilder</codeph> class, which defines individual
				setter methods. 
				<p>The 
				  <codeph>TextFormat</codeph> interface defines an immutable object
				  so there are only getter methods and no setters. You can set the closed-caption
				  styling parameters only with the 
				  <codeph>TextFormatBuilder</codeph> class: 
				</p> 
				<codeblock outputclass="syntax java">// set font type
public void setFont(Font font) 
public void setBackgroundColor(String backgroundColor)
public void setFillColor(String fillColor)
// set the font-edge color
public void setEdgeColor(String edgeColor) 
// set the font size
public void setSize(Size size) 
// set the font edge type
public void setFontEdge(FontEdge fontEdge) 
public void setFontOpacity(int fontOpacity)
public void setBackgroundOpacity(int backgroundOpacity)
// set the font-fill opacity level
public void setFillOpacity(int fillOpacity) 
public void setFontColor(String fontColor)
public void setBottomInset(String bi)
public void setSafeArea(String sa)
public void setTreatSpaceAsAlphaNum(bool)</codeblock> 
				<note type="important"> 
				  <p><b>Color Settings:</b> In Android 
					 <ph conkeyref="phrases/primetime-sdk-name"/> 2.X, an
					 enhancement was made to color styling of closed captions. The enhancement
					 allows for setting closed caption colors using a hex string representing RGB
					 color values. The RGB hex color representation is the familiar 6 byte string
					 you use in applications such as Photoshop:
				  <ul id="ul_eyx_q3w_vy"> 
					 <li id="li_BE024896AF544779B5783D2FF3BA604E">FFFFFF = Black
					 </li> 
					 <li id="li_836EBA2ED99F46B296DCB753C1F8E8BF">000000 = White
					 </li> 
					 <li id="li_77773E5ED55E46148C904D18E51A7618">FF0000 = Red
					 </li> 
					 <li id="li_360A85D4D6AC45B89D20AF2EE89047C6">00FF00 = Green
					 </li> 
					 <li id="li_5B2435EECC7E47A8A2EC4B6242BB2321">0000FF = Blue
					 </li> 
				  </ul> and so on.
				  </p> 
				  <p>In your application, whenever you pass color styling
					 information to 
					 <codeph>TextFormatBuilder</codeph>, you still use the 
					 <codeph>Color</codeph> enumeration as before, but now you must
					 add 
					 <codeph>getValue()</codeph> to the color to get the value as a
					 string. For example: 
					 <codeblock>tfb = tfb.setBackgroundColor(TextFormat.Color.RED<b>.getValue()</b>);</codeblock> 
				  </p> 
				</note>
			 </choice> 
		  </choices> 
		  <info> Setting the closed-caption style is an asynchronous operation,
			 so it might take up to a few seconds for the changes to appear on the screen. 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

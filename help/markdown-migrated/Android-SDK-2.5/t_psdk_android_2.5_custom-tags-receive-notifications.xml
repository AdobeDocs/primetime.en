<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_ios_receiving-custom-hls-tag-notifications"> 
  <title>Add listeners for timed metadata notifications</title> 
  <shortdesc>To receive notifications about tags in the manifest, you need to
	 implement the appropriate event listeners. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_2E383D86FC844995B0E6B6F10BF5423E"> 
		<p>You can monitor timed metadata by listening for 
		  <codeph>onTimedMetadata</codeph>, which notify your application of
		  related activity. Each time a unique subscribed tag is identified during
		  parsing of the content, <ph conkeyref="phrases/primetime-sdk-name"/> prepares a new 
		  <codeph>TimedMetadata</codeph> object and dispatches this event. The
		  object contains the name of the tag to which you subscribed, the local time in
		  the playback where this tag will appear, and other data. 
		</p> 
	 </context> 
	 <steps id="steps_72C7A8C512B246B18CEA760DE0B38D06"> 
		<step id="step_7045FFF29C0C4DEEB7CFF144B1D6C626"> 
		  <cmd>Listen for events.
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax java">private final TimedMetadataEventListener timedMetadataEventListener = new TimedMetadataEventListener() {
    @Override
    public void onTimedMetadata(TimedMetadataEvent timedMetadataEvent) {
        TimedMetadata timedMetadata = timedMetadataEvent.getTimedMetadata();

        TimedMetadata.Type type = timedMetadata.getType();
        if (type.equals(TimedMetadata.Type.ID3)){
            Metadata metadata = timedMetadata.getMetadata();
            Set&lt;String> keys = metadata.keySet();
            for (String key : keys) {
                String value = metadata.getValue(key);
            }
        } else if (_mediaPlayer.getPlaybackRange() != null &amp;&amp; _mediaPlayer.getPlaybackRange().getDuration() > 0) {
            displayRanges();
        }
    }
};
</codeblock> 
		  </info> 
		</step> 
	 </steps> 
	 <postreq id="postreq_A9480A08723B4C26A43407C172F582DA">

		ID3 metadata uses the same 
		<codeph>onTimedMetadata</codeph> listener to indicate the presence of an
		ID3 tag. This should not cause any confusion, however, because you can use the 
		<codeph>TimedMetadata</codeph> 
		<codeph>type</codeph> property to differentiate between TAG and ID3. For
		more information about ID3 tags, see 
		<xref keyref="id3-metadata-retrieve"/>. 
	 </postreq> 
  </taskbody> 
</task> 

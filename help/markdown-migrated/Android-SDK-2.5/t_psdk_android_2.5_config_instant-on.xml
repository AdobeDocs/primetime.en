<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_config-buffering-instant-on"> 
  <title>Configure buffering for Instant On</title> 
  <shortdesc><ph conkeyref="phrases/primetime-sdk-name"/> provides methods and
	 statuses to allow you use Instant On with a media resource. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_A7DA4590BBDA4F63BF09AE6964FEAA69"> 
		<note>Adobe recommends using 
		  <codeph>MediaPlayerItemLoader</codeph> for InstantOn. To use 
		  <codeph>MediaPlayerItemLoader</codeph>, rather than 
		  <codeph>MediaPlayer</codeph>, see 
		  <xref keyref="media-resource-load-using-mediaplayeritemloader"/>.
		</note> 
	 </context> 
	 <steps id="steps_F8987DB937274FD380D941BF8416D3ED"> 
		<step id="step_5FA742BEBCD8480C9513906FEBF1BC31"> 
		  <cmd>Confirm that the resource has loaded, and the player is prepared
			 to play the resource. 
		  </cmd> 
		</step> 
		<step id="step_841C9EEBD9E74F9FB1C66F1017A13D55"> 
		  <cmd>Before calling 
			 <codeph>play</codeph>, call 
			 <codeph>prepareBuffer</codeph> for each 
			 <codeph>MediaPlayer</codeph> instance. 
		  </cmd> 
		  <info><codeph>prepareBuffer</codeph> enables Instant On, and 
			 <ph conkeyref="phrases/primetime-sdk-name"/> starts buffering
			 immediately and dispatches the 
			 <codeph>BUFFERING_COMPLETED</codeph> event when the buffer is full. 
		  </info> 
		  <info> 
			 <note type="tip">By default, 
				<codeph>prepareBuffer</codeph> and 
				<codeph>prepareToPlay</codeph> set up the media stream to start
				playing from the beginning. To start at another position, pass the position (in
				milliseconds) to 
				<codeph>prepareToPlay</codeph>. 
			 </note> 
			 <codeblock>@Override
public void onStatusChanged(MediaPlayerStatus status) {
    switch (status) {
        case INITIALIZED:
            // This example starts 5 seconds into the stream.
            mediaPlayer.prepareToPlay(5000);
            break;
        case PREPARING:
            break;
        case PREPARED:
            mediaPlayer.prepareBuffer();
            break;
        ...
    }
}</codeblock> 
		  </info> 
		</step> 
		<step id="step_8D146E5D59584378B5D3E5CB337DD873"> 
		  <cmd>When you receive the 
			 <codeph>BUFFERING_COMPLETE</codeph> event, start playing the item or
			 display visual feedback to indicate that the content is completely buffered. 
		  </cmd> 
		  <info>If you call 
			 <codeph>play</codeph>, playback should begin immediately. 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="t_psdk_ad-full-event-replay"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Enable ads in full-event replay</title> 
  <shortdesc>Full-event replay (FER) is a VOD asset that acts as a live/DVR
	 asset, so your application must take steps to ensure that ads are placed
	 correctly. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_A2316833F48B411CA3A1F3C801BBA4FB"> 
		<p>For live content, <ph conkeyref="phrases/primetime-sdk-name"/> uses the metadata/cues in the
				manifest to determine where to place ads. However, sometimes live/linear content
				might resemble VOD content. For example, when live content completes, an
					<codeph>EXT-X-ENDLIST</codeph> tag is appended to the live manifest. For HLS,
				the <codeph>EXT-X-ENDLIST</codeph> tag means that the stream is a VOD stream. <ph
					conkeyref="phrases/primetime-sdk-name"/> cannot automatically differentiate this
				stream from a normal VOD stream to correctly insert ads. </p> 
		<p>Your application must tell <ph conkeyref="phrases/primetime-sdk-name"/> whether the content is
				live or VOD by specifying the <codeph>AdSignalingMode</codeph>. </p> 
		<p>For a FER stream, the <ph conkeyref="phrases/auditude-name-long"/> server should not provide
				the list of ad breaks that need to be inserted on the timeline before starting the
				playback. This is the typical process for VOD content. Instead, by specifying a
				different signaling mode, <ph conkeyref="phrases/primetime-sdk-name"/> reads all the
				cue points from the FER manifest and goes to the ad server for each cue point to
				request an ad break. This process is similar to live/DVR content. </p> 
		<p>In addition to each request that is associated with a cue point, <ph
					conkeyref="phrases/primetime-sdk-name"/> makes an additional ad request for
				pre-roll ads. </p> 
	 </context> 
	 <steps id="steps_ABFFE85BF742453391403E60DF3FB145"> 
		<step id="step_73788668F4A9482DA316A4B7FB7E81E8"> 
		  <cmd>From an external source, such as vCMS, obtain the signaling mode
			 that should be used. 
		  </cmd> 
		</step> 
		<step id="step_043E43EC0D67423A9043881A4B26B0AA"> 
		  <cmd>Create the advertising-related metadata. 
		  </cmd> 
		</step> 
		<step id="step_08931339B9C143D7B8D88F07668AAEB3">
				<cmd>If the default behavior must be overwritten, specify the
						<codeph>AdSignalingMode</codeph> by using
						<codeph>AdvertisingMetadata.setSignalingMode</codeph>. </cmd>
				<info>
					<p>The valid values are <codeph>DEFAULT, SERVER_MAP</codeph>, and
							<codeph>MANIFEST_CUES</codeph>. </p>
					<p>You must set the ad signaling mode before calling
							<codeph>prepareToPlay</codeph>. After <ph
							conkeyref="phrases/primetime-sdk-name"/> starts to resolve and place ads
						on the timeline, changes to the ad signaling mode are ignored. Set the mode
						when you create the <codeph>AuditudeSettings</codeph> object. </p>
				</info>
			</step> 
		<step id="step_C0863350615E49BCB2DF2F4D0B90A49F"> 
		  <cmd>Continue to playback. 
		  </cmd> 
		</step> 
	 </steps>
		<example>
			<draft-comment author="kenny">This topic used to have an incorrect 2.5 example. Needs a
				1.4 example. You can see the 2.5 example in... the 2.5 guide. Go
				figure.</draft-comment>
		</example> 
  </taskbody> 
</task> 

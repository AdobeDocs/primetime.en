<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="add-realtime-log-task"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Add real-time logging and debugging</title> 
  <shortdesc>You can use notifications to implement real-time logging in your
	 video application. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_30F68EF7EDEC489DBF555B0CE8B62FE8"> 
		<p>The notification system allows you to gather logging and debugging
		  information for diagnostics and validation without overly stressing the system.
		  
		</p> 
		<note type="important">The logging back end is not part of a production
		  setup and is not expected to handle high-load traffic. If your implementation
		  does not need to be absolutely complete, consider the efficiency of data
		  transmission to avoid overloading your system. 
		</note> 
		<p>Here is an example of how to retrieve notifications. 
		</p> 
	 </context> 
	 <steps id="steps_4374D7BAF3284247B3A001428C47C44B"> 
		<step id="step_CACAB79FAC074794BD02D215D0C30697"> 
		  <cmd>Create a timer-based execution thread for your video application
			 that periodically queries the data gathered by the 
			 <ph conkeyref="phrases/primetime-sdk-name"/> notification system. 
		  </cmd> 
		  <info/> 
		</step> 
		<step id="step_405657FC3F7E48E69AF7CC94D9C562F9"> 
		  <cmd>If the timer's interval is too large and the size of the event
			 list is too small, the notification event list will overflow. To avoid this
			 overflow, do one of the following: 
		  </cmd> 
		  <choices id="choices_B689A1F502FD4AC5911A31AFA0C5D10A"> 
			 <choice id="choice_84240D78C50E4889AE4AD3EC5C37A620"> 
				<p>Decrease the time interval that drives the thread that polls for
				  new events. 
				</p> 
			 </choice> 
			 <choice id="choice_8DA67DB063954749B0BA2514577913B8"> 
				<p>Increase the size of the notification list. 
				</p> 
			 </choice> 
		  </choices> 
		</step> 
		<step id="step_64E9915357864C1B9FDA091BFEAA172E"> 
		  <cmd>Serialize the latest notification event entries in JSON format and
			 send the entries to a remote server for postprocessing. 
		  </cmd> 
		  <info> The remote server could then graphically display the provided
			 data in real-time. 
		  </info> 
		</step> 
		<step id="step_2D30BBEE4E8A4BA3B75C31A26E365FEB"> 
		  <cmd>To detect the loss of notification events, look for gaps in the
			 sequence of event index values. 
		  </cmd> 
		  <info> Each notification event has an index value that is automatically incremented by the
						<codeph>session.NotificationHistory</codeph> class. </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

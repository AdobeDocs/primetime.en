<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="set-up-error-handling"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Set up error handling</title> 
  <shortdesc>Set up a single place to handle errors. 
  </shortdesc> 
  <taskbody> 
	 <steps id="steps_98FA0E3B6DF34475AF2F3E3D81562C1B"> 
		<step id="step_0934B2D819D240EC910D7FA678F3719B" >
		  <cmd>Implement an event callback function for 
			 <codeph>MediaPlayerEvent.STATUS_CHANGED</codeph>.
		  </cmd>
		  <info><ph conkeyref="phrases/primetime-sdk-name"/> passes event
			 information, such as a 
			 <codeph >MediaPlayerStatusChangeEvent</codeph>
			 object. 
		  </info>
		</step> 
		<step id="step_681A751D078E41BDA072451FC79C8F17">
				<cmd>In the callback, when the  returned state is
						<codeph>MediaPlayerState.ERROR</codeph>, provide logic to handle all errors.
				</cmd>
			</step> 
		<step id="step_3086E49D178C424586E9FE00B19A367D" >
		  <cmd>After the error is handled, reset the 
			 <codeph>MediaPlayer</codeph> object or load a new media resource. 
		  </cmd>
		  <info>
			 <p >When the 
				<codeph>MediaPlayer</codeph> object is in the error state it
				remains in that state until you reset it using the 
				<codeph>MediaPlayer.reset</codeph> method. 
			 </p>
		  </info>
		</step>
	 </steps>
	 <example id="example_49FF225E92EA494AA06B2E5F26101F4C"> 
		<p>For example:
				<codeblock outputclass="syntax java">mediaPlayer.addEventListener(
  MediaPlayerEvent.STATUS_CHANGED, new StatusChangedEventListener() {
    @Override
    public void onStatusChanged(MediaPlayerStatusChangeEvent event) {
        if (event.getStatus() == MediaPlayerStatus.ERROR) {
            // handle <ph conkeyref="phrases/primetime-sdk-name"/> error here
        }
    }
});</codeblock>
			</p> 
	 </example> 
  </taskbody> 
</task> 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "technicalContent/dtd/concept.dtd">
<concept id = "ad-deletion-replacement-api-changes"
    xmlns:ditaarch = "http://dita.oasis-open.org/architecture/2005/">
<title>Ad deletion and replacement API changes</title>
<shortdesc>These changes in <ph  conkeyref = "phrases/primetime-sdk-name"></ph> support
ad deletion and replacement. </shortdesc>
<conbody><ul>
<li><codeph>AdSignalingMode</codeph> <p>Added <codeph>CUSTOM_RANGES</codeph> signaling mode.</p></li>
<li><codeph>OpportunityGenerator</codeph> <p><codeph>extractAdSignalingMode()</codeph> -
Set <codeph>AdSignalingMode.CUSTOM_RANGES</codeph> if replace ranges
are in the metadata.</p></li>
<li><codeph>PlacementType</codeph> <p>Added <codeph>CUSTOM_RANGE</codeph> type.</p></li>
<li><codeph>PlacementMode</codeph> <ul>
<li>Added <codeph>DELETE</codeph> mode.</li>
<li>Added <codeph>MARK</codeph> mode</li>
<li>Added <codeph>FreeReplace</codeph> mode
- This mode has a duration but is a pure insertion</li></ul></li>
<li><codeph>TimeRange</codeph> <p>No
longer a <codeph>final</codeph> class</p></li>
<li>Added <codeph>ReplaceTimeRange()</codeph> method <p>Extends <codeph>TimeRange</codeph> to
have a <codeph>replacementDuration</codeph> property. For the MARK
and DELETE cases, <codeph>replacementDuration</codeph> is 0.</p></li>
<li><codeph>TimeRangeCollection</codeph> <ul>
<li>Added <codeph>toReplaceMetadata()</codeph> utility
function to extract <codeph>timeRanges</codeph>.</li>
<li>Modified to work
with <codeph>DELETE</codeph> and <codeph>REPLACE</codeph></li>
<li><codeph>METADATA_KEY_CUSTOM_MARK_RANGES</codeph>, <codeph>METADATA_KEY_CUSTOM_DELETE_RANGES</codeph>, <codeph>METADATA_KEY_CUSTOM_REPLACE_RANGES</codeph></li></ul></li>
<li><codeph>CatalogItem</codeph> <ul>
<li>Added <codeph>createCustomTimeRangesFrom()</codeph> - Creates
metadata for MARK/DELETE/REPLACE use cases from the JSON file.</li>
<li>Removed <codeph>createCustomAdMarkersMetadataFrom()</codeph></li></ul></li>
<li><codeph>DefaultMetadataKeys</codeph> <ul>
<li>Added <codeph>CUSTOM_DELETE_RANGES_METADATA_KEY</codeph></li>
<li>Added <codeph>CUSTOM_REPLACE_RANGES_METADATA_KEY</codeph></li>
<li><codeph>CUSTOM_AD_MARKERS_METADATA_KEY</codeph> (did
not change) </li></ul></li>
<li><codeph>DefaultContentFactory</codeph> <ul>
<li><codeph>doRetrieveGenerators()</codeph> <ul>
<li>Added <codeph>CustomRangesOpportunityGenerator</codeph> for
when the metadata contains custom ranges</li></ul></li>
<li><codeph>doRetrieveResolvers()</codeph> <ul>
<li>Add <codeph>CustomRangeResolver</codeph> for
when DELETE and REPLACE custom ranges are present in the metadata</li>
<li>Moved <codeph>CustomAdMarkerResolver</codeph> ahead
of <codeph>AuditudeResolver</codeph></li></ul></li></ul></li>
<li>Added <codeph>CustomRangeOpportunityGenerator</codeph> <ul>
<li><codeph>doUpdate()</codeph> Leaves
empty - no Update, VOD</li>
<li><codeph>doProcess()</codeph> Creates
a new placement of a new type <codeph>Placement.Delete_Range</codeph></li>
<li>Added <codeph>CustomRangeOppotunityGenerator</codeph> to
the top of the generators list in <codeph>DefaultContentFactory</codeph>,
so delete ranges are processed before ad insertions.</li>
<li>Added <codeph>createCustomRangeOpportunities</codeph> to
create all the opportunities <p>MARK - One opportunity for each
valid mark range of <codeph>PlacementType.CUSTOM_RANGE</codeph> and <codeph>PlacementMode.MARK</codeph></p><p>DELETE
- One opportunity for each valid delete range of <codeph>PlacementType.CUSTOM_RANGE</codeph> and <codeph>PlacementMode.DELETE</codeph></p><p>REPLACE
- Two opportunities for each valid replace range: <ol>
<li>A delete range opportunity
of <codeph>PlacementType.CUSTOM_RANGE</codeph> and <codeph>PlacementMode.DELETE</codeph>.</li>
<li>An <ph conkeyref="phrases/auditude-name"></ph> ad
opportunity of <codeph>PlacementType.MID_ROLL</codeph> or <codeph>PlacementType.PRE_ROLL</codeph> 
and <codeph>PlacementMode.FREEREPLACE</codeph></li></ol></p></li></ul></li>
<li>Added <codeph>CustomRangeResolver</codeph>: <ul>
<li><codeph>doCanResolve()</codeph> returns <codeph>true</codeph> for
delete ranges.</li>
<li>Added <codeph>createDeleteRangeOperation()</codeph> to
create <codeph>DeleteRange</codeph> for the placement</li></ul></li>
<li>Added <codeph>CustomRangeHelper</codeph>: <ul>
<li>Common utility class
to extract Mark/Delete/Replace <codeph>timeRanges</codeph> and process
them.</li>
<li>Added <codeph>extractCustomRangesMetadata()</codeph></li>
<li>Added <codeph>extractCustomRanges()</codeph></li>
<li>Added <codeph>mergeRanges()</codeph> – Resolves
conflicts and subsets/merges</li></ul></li>
<li><codeph>MediaPlayerTimeline</codeph>: <ul>
<li>">In <codeph>executeOperation()</codeph>, if
the operation is <codeph>DeleteRange</codeph>, added call to remove
method in the operation</li>
<li>In <codeph>executeOperation()</codeph>,
if the operation is <codeph>NOPTimelineOperation</codeph> (empty <codeph>AdBreaks</codeph> coming
back from server), added call to clear.</li>
<li>Added <codeph>onDeleteRangeComplete()</codeph></li>
<li>Added <codeph>removeRange()</codeph></li>
<li>In <codeph>adjustPlacement()</codeph>,
for <codeph>PlacementMode.FREEREPLACE</codeph> mode, zeroed out
the duration. This duration is needed earlier when requesting <codeph>AdBreaks</codeph>,
at this point it needs to be zero to be pure insertion.</li></ul></li>
<li><codeph>VideoEngineTimeline</codeph> <p>Added <codeph>removeC3Ad()</codeph> –
call <codeph>removeByLocalTime()</codeph> for delete ranges</p></li>
<li><codeph>AdSignalingModeGenerator</codeph> <ul>
<li><codeph>doConfigure()</codeph> -
Do not resolve if no opportunity is generated</li>
<li><codeph>createInitialOpportunity()</codeph> - Do
not generate initial opportunity for <codeph>AdSignalingMode.CUSTOM_RANGE</codeph>. The 
<codeph>CustomRangeOpportunityGenerator</codeph> covers
this already.</li></ul></li>
<li><codeph>DeleteRange</codeph> <ul>
<li>Extends <codeph>TimelineOperation</codeph>.</li>
<li>Created by <codeph>CustomRangeResolver</codeph> for
delete and replacement (the deletion part of replacement)</li></ul></li>
<li><codeph>AuditudeConstant</codeph> <ul>
<li><codeph>MAX_PLACEMENTS_PER_REQUEST 1->5</codeph> –
allow packing</li>
<li><codeph>MINIMUM_AD_DURATION 10->5</codeph></li></ul></li>
<li><codeph>AuditudeRequest</codeph> <p>The <codeph>accepts()</codeph> method
was modified to allow packing of different placement type (pre-roll,
mid-roll, post-roll)</p></li>
<li><codeph>AuditudeRequestHelper</codeph> <p>Bug
fixes to allow server override of Ad parameters</p></li>
<li><codeph>AuditudeResolver</codeph> <p>The <codeph>canBePacked()</codeph> method
was changed to allow packing</p></li>
<li><codeph>CustomAdResolver</codeph> <p>The <codeph>timeRange</codeph> extraction
functions have been removed. We get one placement at a time, and
turn that into a <codeph>AdBreakPlacement timelineOperation</codeph>.</p></li></ul></conbody></concept>

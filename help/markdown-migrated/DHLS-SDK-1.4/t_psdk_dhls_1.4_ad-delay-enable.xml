<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="enable-lazy-load"> 
  <title>Enable lazy ad loading</title> 
  <shortdesc>You can specify whether to allow playback before all ads are
	 loaded and placed in the timeline. Starting playback in this way gives a viewer
	 faster access to the main content. This feature is applicable only for live DVR
	 and does not work on, say VOD assets.
  </shortdesc> 
  <taskbody> 
	 <context id="context_4D6F770357AF423A9CB5B4BE0DF59AA1"> 
	 </context> 
	 <steps id="steps_02358582A23949EE949D941AF30C2ACB"> 
		<step id="step_5ABBA813796843FDAC328E6DF48AD412"> 
		  <cmd>Use the Boolean property 
			 <codeph>delayAdLoading</codeph> in 
			 <codeph>AdvertisingMetadata</codeph>. 
		  </cmd> 
		  <info> 
			 <ul id="ul_B551BC8C4B3046C59ED27EE1F23921E2"> 
				<li id="li_0EF9472A66904AAA8E3CDE33016FAB2C">When false, 
				  <ph conkeyref="phrases/primetime-sdk-name"/> waits until all ads
				  are resolved and placed before transitioning to the PREPARED status. It is
				  false by default. 
				</li> 
				<li id="li_E22BBA87F2AF4A5EBCBFD590A5D62AAC">When true, 
				  <ph conkeyref="phrases/primetime-sdk-name"/> resolves only the
				  initial ads and transitions to the PREPARED status. The remaining ads are
				  resolved and placed during playback. 
				</li> 
			 </ul> 
		  </info> 
		</step> 
		<step id="step_CF8CDF6FEA3E43739C90C808C1E97B3C"> 
		  <cmd>To also activate delayed ad loading with 
			 <ph conkeyref="phrases/auditude-name-long"/>, set this to 
			 <codeph>true</codeph> when you create 
			 <codeph>AuditudeSettings</codeph>. 
		  </cmd> 
		  <info>The 
			 <codeph>AuditudeSettings</codeph> class inherits this property from 
			 <codeph>AdvertisingMetadata</codeph>, but does not inherit the
			 current value. 
		  </info> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">var auditudeSettings:AuditudeSettings = new AuditudeSettings();
auditudeSettings.mediaId = ...
auditudeSettings.zoneId = ...
auditudeSettings.delayAdLoading = true;</codeblock> 
		  </stepxmp> 
		</step> 
		<step id="step_52448C29D4BF407D983029C4530341C1"> 
		  <cmd> To accurately reflect ads as cues on a scrub bar, listen for the 
			 <codeph>TimelineEvent</codeph>.<codeph>TIMELINE_UPDATED</codeph>
			 event and redraw the scrub bar every time that you receive this event. 
		  </cmd> 
		  <info>When VoD streams use delayed ad loading, not all ads are placed
			 on the timeline when your player enters the PREPARED status, so you must
			 explicitly redraw the scrub bar. 
			 <p><ph conkeyref="phrases/primetime-sdk-name"/> optimizes the
				dispatch of this event to minimize the number of times that you must redraw the
				scrub bar; therefore, the number of timeline events is not related to the
				number of ad breaks to be placed on the timeline. For example, if you have five
				ad breaks, you might not receive exactly five events. 
			 </p> 
		  </info> 
		  <stepxmp> 
			 <codeblock outputclass="syntax actionscript">mediaPlayer.addEventListener(TimelineEvent.TIMELINE_UPDATED, onTimelineUpdated);
// ...
function onTimelineUpdated(event:TimelineEvent):void {
    // get markers
    var markers:Vector.&lt;TimelineMarker&gt; = event.timeline.timelineMarkers;
    drawMarkers(markers);
} </codeblock> 
		  </stepxmp> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

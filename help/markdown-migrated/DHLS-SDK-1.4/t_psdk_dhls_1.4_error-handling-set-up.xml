<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="set-up-error-handling"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Set up error handling</title> 
  <shortdesc>Set up a single place to handle errors. 
  </shortdesc> 
  <taskbody> 
	 <steps id="steps_98FA0E3B6DF34475AF2F3E3D81562C1B">
		<step id="step_CD5A31AAEF7E4A2FA1E32D23ED74A1C0" >
		  <cmd>Implement an event callback function for 
			 <codeph>MediaPlayerStatusChangeEvent.STATUS_CHANGED</codeph>.
		  </cmd>
		  <info><ph conkeyref="phrases/primetime-sdk-name"/> passes event
			 information, such as a 
			 <codeph >MediaPlayerStatusChangeEvent</codeph> object.
			 
		  </info>
		</step> 
		<step id="step_681A751D078E41BDA072451FC79C8F17">
				<cmd>In the callback, when the  status from the event parameter is
						<codeph>MediaPlayerStatus.ERROR</codeph>, provide logic to handle all
					errors. </cmd>
			</step>
		<step id="step_FB4F0733805F4FAD9BF28BE60EA0B308" >
		  <cmd>After the error is handled, reset the 
			 <codeph>MediaPlayer</codeph> object or load a new media resource. 
		  </cmd>
		  <info>
			 <p>When the <codeph>MediaPlayer</codeph> object is in the ERROR state, it cannot exit this state
						until you either reset the <codeph>MediaPlayer</codeph> object (via the
							<codeph>MediaPlayer.reset</codeph> method) or load a new media resource
							(<codeph>MediaPlayer.replaceCurrentItem</codeph>). </p>
		  </info>
		</step>
	 </steps>
	 <example id="example_49FF225E92EA494AA06B2E5F26101F4C"> 
		<p>For example:
				<codeblock outputclass="syntax actionscript">mediaPlayer.addEventListener(MediaPlayerStatusChangeEvent.STATUS_CHANGED, 
                             onStatusChanged);

private void onStatusChanged(event:MediaPlayerStatusChangeEvent):void {
    if (event.status == MediaPlayerStatus.ERROR) {
        var error:MediaError = event.error;
        // handle TVSDK error here
    }
}
</codeblock>
			</p> 
	 </example> 
  </taskbody> 
</task> 

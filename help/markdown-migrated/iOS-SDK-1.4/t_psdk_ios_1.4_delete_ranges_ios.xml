<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_delete_ranges_ios"> 
  <title>Delete Ranges</title> 
  <shortdesc/> 
  <taskbody> 
	 <context id="context_B33B5C7348D04FA3A50E0A32810678CC">To implement the 
		<codeph>PTTimeRangeCollection</codeph> and delete ranges of content as
		ads: 
	 </context> 
	 <steps id="steps_BF390310A87B4B9E845B17434CBE756A"> 
		<step id="step_4B393B528CBE4662835BF9FF31D59C27"> 
		  <cmd>Prepare the 
			 <codeph>PTTimeRangeCollection</codeph>. 
		  </cmd> 
		</step> 
		<step id="step_3E11063DA2C44347AEE9206AEF15DB0D"> 
		  <cmd>Set the type of the 
			 <codeph>PTTimeRangeCollection</codeph> to 
			 <codeph>PTTimeRangeCollectionTypeDeleteRanges</codeph>, which
			 notifies 
			 <ph
			  conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
			 that the provided ranges need to be deleted. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c">#define PSDK_TIMESCALE 100000
     
NSArray *ranges =  @[
  [PTReplacementRange replacementRangeWithRange:CMTimeRangeMake(CMTimeMakeWithSeconds
    (0, PSDK_TIMESCALE),CMTimeMakeWithSeconds(60, AD_TIMESCALE))],
  [PTReplacementRange replacementRangeWithRange:CMTimeRangeMake(CMTimeMakeWithSeconds
    (120, PSDK_TIMESCALE),CMTimeMakeWithSeconds(60, AD_TIMESCALE))]
];
     
PTTimeRangeCollection *timeRangeCollection = 
  [[PTTimeRangeCollection alloc] initWithRanges:ranges 
                                           type:PTTimeRangeCollectionTypeDeleteRanges];</codeblock> 
		  </info> 
		</step> 
		<step id="step_792712C51AAC4FC6825766B4B1E34155"> 
		  <cmd>Create the 
			 <codeph>PTAdMetadata</codeph> and set the 
			 <codeph>PTTimeRangeCollection</codeph>. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c">//Create the PTPlayerItem metadata
PTMetadata *metadata = [[PTMetadata alloc] init];
 
//Create the Ad metadata
PTAuditudeMetadata *adMetadata = [[PTAuditudeMetadata alloc] init];
adMetadata.timeRangeCollection = timerangeCollection;
adMetadata.zoneId = adZoneId;
adMetadata.domain = adDomain;
adMetadata.signalingMode = PTAdSignalingModeServerMap;
 
//Set Ad metadata
[metadata setMetadata:adMetadata forKey:PTAdResolvingMetadataKey];
 
//Create PTMediaPlayerItem
PTMediaPlayerItem *playerItem = [[[PTMediaPlayerItem alloc] initWithUrl:mediaUrl
                                                                mediaId:mediaId
                                                               metadata:metadata];</codeblock> 
			 <note type="tip">Ad insertion occurs after the deletion of the custom
				ranges based on the 
				<codeph>PTAdMetadata</codeph> and the current 
				<codeph>PTAdSignalingMode</codeph>. 
			 </note> 
		  </info> 
		</step> 
		<step id="step_F7B322B2EC7B4C959378A42482495425"> 
		  <cmd>Create the player and start playback. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c">//Create PTMediaPlayer using the created PTMediaPlayer
PTMediaPlayer *player = [PTMediaPlayer playerWithMediaPlayerItem:playerItem];
 
//Add player to the player UIView
[self.playerView addSubview:(UIView *)player.view];
 
//Start playback
[player play];</codeblock> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_ios_implement-pause-play"> 
  <title>Implement a play/pause button</title> 
  <shortdesc>You can set up buttons that call 
	 <ph
	  conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
	 methods to pause and play the media. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_CB9C71ACA43546D1B4D77F1BF86ED503"/> 
	 <steps id="steps_72C7A8C512B246B18CEA760DE0B38D06"> 
		<step id="step_E737B4A3475B44A88DDFF8696B68C758"> 
		  <cmd>Use the following sample code to implement a play or pause button:
			 
		  </cmd> 
		</step> 
	 </steps> 
	 <example id="example_BC2632D673FE451190A30A23145090D0"> 
		<codeblock outputclass="syntax objective-c">_playPauseButton = 
[[UIButton alloc] initWithFrame:CGRectMake(BUTTON_POS_X, BUTTON_POS_Y, BUTTON_SIZE_W, BUTTON_SIZE_H)];
[_playPauseButton setImage:[UIImage imageNamed:@"play.png"] forState:UIControlStateNormal]; 
[_playPauseButton setImage:[UIImage imageNamed:@"pause.png"] forState:UIControlStateSelected];
[_playPauseButton addTarget:self action:@selector(playTouch:) forControlEvents:UIControlEventTouchUpInside];
[self addSubview:_playPauseButton];

...

- (void)playTouch:(id)sender {
    if (self.player.status == PTMediaPlayerStatusPlaying) {
        _playPauseButton.selected = YES; 
        [self.player pause];
    }
    else {
        _playPauseButton.selected = NO; [self.player play];
    }
}
</codeblock> 
	 </example> 
  </taskbody> 
</task> 

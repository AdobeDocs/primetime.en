<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_psdk_ref_integrate-pass">
    <title>Integrate Primetime authentication</title>
    <shortdesc>Customize your reference implementation to integrate <ph
            conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name-long"/> for your
        production environment.</shortdesc>
    <taskbody>
        <context>
            <p>The Reference Implementation integration of the <ph
                    conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"
                    >/pay</ph> service works out-of-the-box as a demonstration. However, to use the
                integration in a production-ready player, you must implement the following
                customizations:</p>
        </context>
        <steps>
            <step>
                <cmd>Enable or disable entitlement flows.</cmd>
                <info>The <codeph>EntitlementManager</codeph> must first initialize and obtain an
                    instance of the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/>
                    SDK to be enabled. If the <codeph>EntitlementManager</codeph> does not
                    initialize this library, the manager will be disabled.</info>
                <substeps id="substeps_urw_fmt_xp">
                    <substep>
                        <cmd>Enable the <codeph>EntitlementManger</codeph>, from your main
                            application class:</cmd>
                        <info>
                            <codeblock outputclass="syntax java">// initialize the AccessEnabler library, required for Primetime PayTV Pass entitlement workflows
EntitlementManager.initializeAccessEnabler(this); // comment out this line to disable entitlement workflows</codeblock>
                        </info>
                    </substep>
                    <substep>
                        <cmd>Use the <codeph>ManagerFactory</codeph> class to obtain an instance of
                            the <codeph>EntitlementManager</codeph>.</cmd>
                        <info> You must always use the <codeph>ManagerFactory</codeph> to get an
                            instance of the <codeph>EntitlementManager</codeph>, as the
                                <codeph>ManagerFactory</codeph> maintains a single instance of the
                            EntitlementManager for your application. Never instantiate the
                                <codeph>EntitlementManager</codeph> or
                                <codeph>EntitlementManagerOn</codeph> classes by using their
                            constructors.<codeblock outputclass="syntax java">EntitlementManager entitlementManager = 
  ManagerFactory.getEntitlementManager();</codeblock></info>
                    </substep>
                </substeps>
                <stepresult>The <codeph>ManagerFactory</codeph> returns an instance of
                        <codeph>EntitlementManagerOn</codeph>, with the entitlement flows enabled,
                    if you previously called
                        <codeph>EntitlementManager.initializeAccessEnabler</codeph>. If you do not
                    first call  <codeph>EntitlementManager.initializeAccessEnabler</codeph>, then
                    the <codeph>ManagerFactory</codeph> will return an instance of
                        <codeph>EntitlementManager</codeph>, with the entitlement flows
                    disabled.</stepresult>
            </step>
            <step>
                <cmd>Configure the Requestor ID.</cmd>
                <info>The Reference Implementation comes pre-configured with the test Requestor ID
                    set to: "REF". You can use this Requestor ID to test your application. When you
                    are ready to use the Requestor ID provided to you by your <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/>
                    representative, update the application's
                        <filepath>res/values/strings.xml</filepath> file with your Requestor ID.
                    <codeblock outputclass="syntax xml">&lt;!-- Programmer Requestor ID, change to ID provided by your Adobe 
     Primetime pay-TV pass representative -->
&lt;string name="adobepass_requestor_id">REF&lt;/string>

&lt;!-- Adobe Primetime pay-TV pass service provider endpoint for production
     environment -->
&lt;string name="adobepass_sp_url_production">sp.auth.adobe.com&lt;/string>

&lt;!-- Adobe Primetime pay-TV pass service provider endpoint for staging 
     environment -->
&lt;string name="adobepass_sp_url_staging">sp.auth-staging.adobe.com&lt;/string></codeblock></info>
                <stepresult>Additionally, you may need to change the URLs that your application uses
                    to connect to the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/>
                    services. These include the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/> staging
                    and production server URLs, and a URL to a Token Verification Service. Check
                    with your Adobe Primetime representative for details.</stepresult>
            </step>
            <step>
                <cmd>Sign the Requestor ID.</cmd>
                <info>In order to establish the identity of the Programmer within the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/> system,
                    the Programmer's Requestor ID is send to the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/> system.
                    As an added layer of security, the Requestor ID must be signed by the Programmer
                    prior to sending it to Adobe. Adobe recommends that the Programmer setup a
                    service to sign the Requestor ID on a trusted network. <p>The Primetime
                        Reference Implementation demonstrates how to sign the Requestor ID, however
                        this is for demonstration purposes only. Adobe strongly recommends that the
                        signing certificate and the signature generator code, under
                            <codeph>com.adobe.primetime.reference.crypto</codeph>, should not be
                        included within a production application. Instead, you should move it to a
                        trusted networked service.</p></info>
            </step>
            <step>
                <cmd>Configure the Server Environment.</cmd>
                <info>The <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/>
                    service can run in two separate environments:<ul id="ul_mvc_jtt_xp">
                        <li>Staging - The staging environment is used for testing your application. </li>
                        <li>Production - The production environment is used for live deployments of
                            your application.</li>
                    </ul><p>You set the URIs for both the staging and production environments using
                        the application, however you must set which of these is used by the
                        application within the code. In the
                            <codeph>com.adobe.primetime.reference.manager.EntitlementManger</codeph>
                        class, set the <codeph>environmentUri</codeph> variable to either
                            <codeph>STAGING_URI</codeph> or <codeph>PRODUCTION_URI</codeph>
                        depending on which <ph
                            conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"
                        /> service environment you are using. <note>The provided Requestor ID
                            ("REF") should only be used with the staging
                            environment.</note></p><p><codeph>com.adobe.primetime.reference.manager.EntitlementManager</codeph>:</p><codeblock outputclass="syntax java">// Adobe Primetime authentication service provider endpoint for production environment
PRODUCTION_URI =
  application.getResources().getString(R.string.adobepass_sp_url_production);

// Adobe Primetime authentication service provider endpoint for staging environment
STAGING_URI =
  application.getResources().getString(R.string.adobepass_sp_url_staging);

// Set to STAGING_URI when testing against the staging/test environment
// Set to PRODUCTION_URI when deploying the application for production use
String environmentUri = STAGING_URI;

// Adobe Primetime authentication service URI used by this application
PAYTV_PASS_URI = environmentUri + "/adobe-services";

// Token Verification Service URL
TVS_URL = "https://" + environmentUri + "/tvs/v1/validate";</codeblock></info>
            </step>
            <step>
                <cmd>Customize the MVPD Selection Grid.</cmd>
                <info>The content provider selection page displays a table of the top nine MVPDs the
                    user may select from. The application pulls the top nine MVPDs from an ordered
                    list within the application that match the available MVPDs integrated with the
                    Programmer in the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/> system.
                    The ordered list of the primary MVPDs is keyed on the MVPD ID within the <ph
                        conref="../../phrase_library_ref_impl.xml#c_psdk_phrase-library/auth-name"/> system,
                    not the MVPD display name. It is important to verify that the MVPD IDs in the
                    primary MVPDs list match the MVPD IDs integrated with the Programmer's account,
                    as in some cases the IDs may be different across integrations. Below is the
                    ordered list of primary MVPDs that is found in the class
                        <codeph>com.adobe.primetime.reference.ui.entitlement.MvpdPickerFragment</codeph>.<codeblock outputclass="syntax java">/* Array of MVPDs to display in a Grid of icons
When displaying a grid, only the MVPDs which intersect this array and the
ArrayList of all MVPDs are displayed.
The array contents are ordered by display preference as only a maximum of
MAX_DISPLAY_ICONS are displayed.
*/
private static final String[] PRIMARY_MVPDS = {
"Comcast_SSO",                         // Comcast XFINITY
"DTV",                                 // DirectTV
"Dish",                                // Dish
"TWC",                                 // Time Warner Cable
"Cox",                                 // Cox
"Charter_Direct",                      // Charter
"Verizon",                             // Verizon FiOS
"Cablevision",                         // Cablevision Optimum
"ATT",                                 // AT&amp;T U-verse
"Brighthouse",                         // Brighthouse
"Suddenlink",                          // Suddenlink
"Mediacom",                            // Mediacom
"CableOne",                            // CableOne
"WOW",                                 // WOW!
"RCN",                                 // RCN
"auth_atlanticbb_net",                 // Atlantic Broadband
"auth_armstrongmywire_com",            // Armstrong
"knology_auth-gateway_net",            // KNOLOGY
"serviceelectric_auth-gateway_net",    // Service Electric Cablevision
"msauth_midco_net",                    // Midcontinent Communications
"auth_metrocast_net",                  // MetroCast
"www_websso_mybrctv_com",              // Blue Ridge Communications
};</codeblock></info>
                <stepresult>The following table provides an example of how the ordered list of
                    primary MVPDs is used. The first column lists the MVPDs integrated with the
                    Programmer. The second column is the (shortened) ordered list of MVPDs. The
                    third column is the result list used to display the top six MVPDs to the user.
                        <p>This example uses the top six MVPDs instead of the actual nine just to
                        keep the example simple. Notice how the result list contains the
                        intersection of the first two lists and has the same ordering as the second
                        list. Also, notice that AT&amp;T U-verse is not in the final list, as only
                        the first matching six MVPDs are taken.</p><table id="table_jfv_pyt_xp">
                        <tgroup cols="3">
                            <thead>
                                <row>
                                    <entry>Available MVPDs</entry>
                                    <entry>Primary MVPDs</entry>
                                    <entry>Displayed 6 MVPDs</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>
                                        <ul id="ul_tnh_dzt_xp">
                                            <li>Comcast XFINITY </li>
                                            <li>TWC </li>
                                            <li>Mediacom </li>
                                            <li>RCN </li>
                                            <li>Dish </li>
                                            <li>AT&amp;T U-verse </li>
                                            <li>CableOne </li>
                                            <li>Brighthouse </li>
                                            <li>Atlantic Broadband </li>
                                            <li>WOW! </li>
                                            <li>MetroCast </li>
                                            <li>DirectTV </li>
                                            <li>Cox </li>
                                            <li>Cablevision Optimum</li>
                                        </ul>
                                    </entry>
                                    <entry>
                                        <ol id="ol_xp4_2zt_xp">
                                            <li>Comcast XFINITY </li>
                                            <li>DirectTV </li>
                                            <li>Dish </li>
                                            <li>TWC </li>
                                            <li>Cox </li>
                                            <li>Charter </li>
                                            <li>Verizon FiOS </li>
                                            <li>Cablevision Optimum </li>
                                            <li>AT&amp;T U-verse</li>
                                        </ol>
                                    </entry>
                                    <entry>
                                        <ol id="ol_ggx_2zt_xp">
                                            <li>Comcast XFINITY </li>
                                            <li>DirectTV </li>
                                            <li>Dish </li>
                                            <li>TWC </li>
                                            <li>Cox </li>
                                            <li>Cablevision Optimum </li>
                                        </ol>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table></stepresult>
            </step>
        </steps>
    </taskbody>
</task>

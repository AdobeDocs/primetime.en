<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_psdk_handle_blackouts_ios"> 
  <title>Handle blackouts in live streams</title> 
  <shortdesc><ph
	 conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
	 handles blackouts in live video streams and provides alternate content during a
	 blackout. 
  </shortdesc> 
  <conbody> 
	 <p>The most common use case associated with a programming blackout is when
		your player app provides alternate content to users who are ineligible to watch
		the main stream. This app can use 
		<ph
		 conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
		to determine the beginning and the end of the blackout period. This way, at the
		beginning of the blackout period, playback can switch from the main stream to
		an alternate stream and then switch back to the main stream when the blackout
		period is over. 
	 </p> 
	 <p>To implement the solution for this use case: 
	 <ol id="ol_uhb_ypn_rp"> 
		<li id="li_C77EED93D99746E69D044EE7E37B4E81">Set up your app to subscribe
		  to blackout tags in a live stream manifest. 
		  <p><ph
			 conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
			 is not directly aware of blackout tags, but it allows your app to subscribe to
			 notifications when specific tags are encountered during manifest file parsing. 
		  </p> 
		</li> 
		<li id="li_DC2F22E3CB194E40946D6D58DD6498AB">Add a notification listener
		  for 
		  <codeph>PTTimedMetadataChangedNotification</codeph>. 
		  <p>This notification is dispatched each time a subscribed tag is parsed
			 in the manifest, and a new 
			 <codeph>PTTimedMetadata</codeph> is prepared from it. 
		  </p> 
		</li> 
		<li id="li_8031EE1114F44FABBA8E47B04F3F535A">Implement a listener method,
		  such as 
		  <codeph>onMediaPlayerSubscribedTagIdentified</codeph>, for 
		  <codeph>PTTimedMetadata</codeph> objects in foreground. 
		</li> 
		<li id="li_A317BDA969BA4619B954C9E524C0C65B">Each time there is an update
		  during playback, use the 
		  <codeph>PTMediaPlayerTimeChangeNotification</codeph> listener to handle
		  
		  <codeph>PTTimedMetadata</codeph> objects. 
		</li> 
		<li id="li_2504714D90FF42E2BFA9DB2EF4239581">Add the 
		  <codeph>PTTimedMetadata</codeph> handler. 
		  <p>This handler allows you to switch to alternate content and return to
			 the main content as indicated by the 
			 <codeph>PTTimedMetadata</codeph> object and its playback time. 
		  </p> 
		</li> 
		<li id="li_7803613A402F4F8D85752CA3AEFFD362">Use <codeph>onSubscribedTagInBackground</codeph> to
					implement the listener method for <codeph>PTTimedMetadata</codeph> objects in
					the background. <p>This method monitors the timing on the background stream,
						which helps you determine when you can switch from alternate content back to
						the main content. </p></li> 
		<li id="li_E14FE45774B44D8D8274E65176ED1793">Implement a listener method
		  for background errors. 
		</li> 
		<li id="li_DE1848FFB05142C19F6D444A1BD53820">If the blackout range is in the DVR on the playback
					stream, update the nonseekable ranges. <p>Your application must set the
						nonseekable range in the DVR in the following cases: <ul id="ul_ecs_nt5_rp">
							<li id="li_80B44D8834FB4BC9B06D389E64DA9956">When joining the main
								stream when a blackout is in the DVR. </li>
							<li id="li_C6DF33D48F3B4B60AD9BCDE9C55A0AC9">When switching back to the
								main content from the alternate content. </li>
						</ul>
					</p></li> 
	 </ol> 
	 </p> 
  </conbody> 
</concept> 

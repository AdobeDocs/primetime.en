<?xml version="1.0"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_timed_metadata_use"> 
  <title>Use timed metadata</title> 
  <shortdesc>You can use 
	 <codeph>TimedMetadata</codeph> when the current playback time matches the
	 start time. 
  </shortdesc> 
  <taskbody> 
	 <context id="context_362A0F8587794B4E816E954C8A17C07F"> 
		<p>To use these saved <codeph>PTTimedMetadata</codeph> objects during playback, use the saved
					<ph>dictionary</ph> from <xref
					href="t_psdk_ios_1.4_timed-metadata-store.xml#task_timed_metadata_store" format="dita"
					scope="local">Store timed-metadata objects as they are dispatched</xref>. </p> 
	 </context> 
	 <steps id="steps_A0EC034941464379AB3D7A5FDAF9026D"> 
		<step id="step_9A8B9EF41F084917A83029436A7FC07A">
				<cmd>Extract and update the current playback time from this notification and find
					all of the <codeph>PTTimedMetadata</codeph> objects with start times that match
					the current playback time. </cmd>
				<info>
					<p>You can use these objects to complete various actions. </p>
					<p>For example:
						<codeblock outputclass="syntax objective-c">- (void) onMediaPlayerTimeChange:(NSNotification *)notification
{
    CMTimeRange seekableRange = self.player.seekableRange;
    if (CMTIMERANGE_IS_VALID(seekableRange))
    {
        int currentTime = (int) CMTimeGetSeconds(self.player.currentTime);
        NSArray *allKeys = timedMetadataCollection ? [timedMetadataCollection allKeys] : [NSArray array];
        NSMutableArray *timedMetadatasToDelete = [[[NSMutableArray alloc] init] autorelease];
        int count = [allKeys count];
 
        for (int i=count - 1; i &gt; -1; i--)
        {
           NSNumber *currTimedMetadataTime = allKeys[i];
           if ([currTimedMetadataTime integerValue] == currentTime)
           {
            /*
                Use the timed metadata here and remove it from the collection.
            */
             NSLog (@"IN PLAYBACK TIME %i TO EXECUTE TIMEDMETADATA %@ scheduled at time %f",currentTime,currTimedMetadata.name,CMTimeGetSeconds(currTimedMetadata.time));
             
            PTTimedMetadata *currTimedMetadata = [timedMetadataCollection objectForKey:currTimedMetadataTime];
            [timedMetadatasToDelete addObject:currTimedMetadataTime];
           }
        }
        
        for (int i=0; i&lt;[timedMetadatasToDelete count]; i++)
        {
            NSNumber *timedMetadataToDelete = timedMetadatasToDelete[i];
            [timedMetadataCollection removeObjectForKey:timedMetadataToDelete];
        }
    }
}</codeblock>
					</p>
				</info>
			</step> 
		<step id="step_0813D4BE24B04A31821BFF7A5371DCA6">
				<cmd>Periodically flush stale <codeph>PTTimedMetadata</codeph> instances from the
					list to prevent memory from continuously growing. </cmd>
			</step> 
	 </steps> 
  </taskbody> 
</task> 

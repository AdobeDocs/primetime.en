<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_nfd_2jp_tp"> 
  <title>Replace ranges</title> 
  <shortdesc/> 
  <taskbody> 
	 <context id="context_4B8CAC8053F04350A4BBC6A71ECA570B">To implement the 
		<codeph>PTTimeRangeCollection</codeph> and delete ranges of content as
		ads: 
	 </context> 
	 <steps id="steps_3CB51BFB5CA94DFB8C0B7FBC97500832"> 
		<step id="step_B1A17B958D484B249E6D2F0C9B090373"> 
		  <cmd>Prepare 
			 <codeph>PTTimeRangeCollection</codeph>. 
		  </cmd> 
		</step> 
		<step id="step_F7873982267E437A9D542502F90C8468">
		  <cmd>Set the type of the 
			 <codeph>PTTimeRangeCollection</codeph> to 
			 <codeph>PTTimeRangeCollectionTypeReplaceRanges</codeph>.
		  </cmd>
		  <info>
			 <p> This step notifies 
				<ph
				 conkeyref="phrases/primetime-sdk-name"><?xm-replace_text Phrase?></ph>
				that the provided ranges need to be replaced with alternate content (ads).
			 </p> 
			 <codeblock outputclass="syntax objective-c">#define PSDK_TIMESCALE 100000
     
NSArray *ranges =  @[
  [PTReplacementRange replacementRangeWithRange:CMTimeRangeMake(CMTimeMakeWithSeconds
    (0, PSDK_TIMESCALE),CMTimeMakeWithSeconds(60, AD_TIMESCALE)) 
    replacementDuration:CMTimeMakeWithSeconds(30, AD_TIMESCALE)],
  [PTReplacementRange replacementRangeWithRange:CMTimeRangeMake(CMTimeMakeWithSeconds
    (120, PSDK_TIMESCALE),CMTimeMakeWithSeconds(60, AD_TIMESCALE)) 
    replacementDuration:CMTimeMakeWithSeconds(30, AD_TIMESCALE)]
                    ];
     
PTTimeRangeCollection *timeRangeCollection = 
  [[PTTimeRangeCollection alloc] initWithRanges:ranges 
                                           type:PTTimeRangeCollectionTypeReplaceRanges];</codeblock> 
			 <note type="tip">The argument 
				<codeph>replacementDuration</codeph> is optional. If it is not
				defined, the 
				<codeph>AdServer</codeph> determines the duration of the ad break. 
			 </note> 
		  </info>
		</step>
		<step id="step_C53DF807B7AD4B529A8E91550CD6AD2D"> 
		  <cmd>Create the 
			 <codeph>PTAdMetadata</codeph> and set the 
			 <codeph>PTTimeRangeCollection</codeph>. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c">//Create the PTPlayerItem metadata
PTMetadata *metadata = [[PTMetadata alloc] init];
 
//Create the Ad metadata
PTAuditudeMetadata *adMetadata = [[PTAuditudeMetadata alloc] init];
adMetadata.timeRangeCollection = timerangeCollection;
adMetadata.zoneId = adZoneId;
adMetadata.domain = adDomain;
adMetadata.signalingMode = PTAdSignalingModeCustomRanges;
 
//Set Ad metadata
[metadata setMetadata:adMetadata forKey:PTAdResolvingMetadataKey];
 
//Create PTMediaPlayerItem
PTMediaPlayerItem *playerItem = [[[PTMediaPlayerItem alloc] initWithUrl:mediaUrl
                                                                mediaId:mediaId
                                                               metadata:metadata];</codeblock> 
			 <note type="tip">Although the 
				<codeph>signalingMode</codeph> is set as 
				<codeph>PTAdSignalingModeCustomRanges</codeph>, this ad signaling
				mode is set automatically when setting the 
				<codeph>PTTimeRangeCollection</codeph> of type 
				<codeph>PTTimeRangeCollectionTypeReplace</codeph>. 
			 </note> 
		  </info> 
		</step> 
		<step id="step_01AA2D0DA3D74E9BB64E8E8059B8B14D"> 
		  <cmd>Create the player and start playback. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c">//Create PTMediaPlayer using the created PTMediaPlayer
PTMediaPlayer *player = [PTMediaPlayer playerWithMediaPlayerItem:playerItem];
 
//Add player to the player UIView
[self.playerView addSubview:(UIView *)player.view];
 
//Start playback
[player play];</codeblock> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 

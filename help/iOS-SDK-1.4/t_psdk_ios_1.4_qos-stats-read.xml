<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "technicalContent/dtd/task.dtd">
<task id="t_psdk_qosprovider_tracking"
 xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"> 
  <title>Read QOS playback, buffering, and device statistics</title> 
  <shortdesc> You can read playback, buffering, and device statistics from the
			<codeph>PTQOSProvider</codeph> class. </shortdesc> 
  <taskbody> 
	 <context id="context_49F8FBE2E7DF422399761BF4F389EFE7">
		<p >The 
		  <codeph>PTQOSProvider</codeph> class provides various statistics,
		  including information about buffering, bit rates, frame rates, time data, and
		  so on. 
		</p>
		<p >It also provides information about the device, such as
		  the model, operating system, and manufacturer's device ID.
		</p> 
		<note  type="tip">You cannot change the playback buffer
		  size, but you can monitor the status of the buffer size for debugging or
		  analysis. 
		  <codeph>PTPlaybackInformation</codeph> includes such properties as 
		  <codeph>playbackBufferFull</codeph> and 
		  <codeph>playbackLikelyToKeepUp</codeph>. 
		</note> 
	 </context> 
	 <steps id="steps_77E17064AC3F4D58AFCB874ACF2B984A"> 
		<step id="step_0AB792858C30431DB60E80F689C29257"> 
		  <cmd>Instantiate a media player. 
		  </cmd> 
		</step>
		<step id="step_A71AB584D65D4C3BB589F351B3A0D735" >
		  <cmd>Create a 
			 <codeph >PTQOSProvider</codeph> object and attach it to
			 the media player. 
		  </cmd>
		  <info>
			 <p>The <codeph>PTQOSProvider</codeph> constructor takes a player context so that it can retrieve
						device-specific information. </p> 
			 <codeblock outputclass="syntax objective-c" >qosProvider = [[PTQOSProvider alloc]initWithPlayer:self.player]; </codeblock>
		  </info>
		</step> 
		<step id="step_0D9521ADFB0F48638C935CB43F70CD88"> 
		  <cmd importance="optional">(Optional) Read the playback statistics. 
		  </cmd> 
		  <info>
			 <p >One solution to read playback statistics is to have
				a timer, such as an 
				<codeph>NSTimer</codeph>, that periodically fetches the new QoS
				values from the 
				<codeph >PTQOSProvider</codeph>. For example:
				<codeblock outputclass="syntax objective-c" >- (void)printPlaybackInfoLog {
    PTPlaybackInformation *playbackInfo = qosProvider.playbackInformation; 
    if (playbackInfo) {
        // For example:
        NSString *infoLog = [NSString stringWithFormat:@"observedBitrate : 
                               %f\n",playbackInfo.observedBitrate];
        [consoleView logMessage:@"====%@\n\n",infoLog];
    }
}</codeblock>
			 </p> 
		  </info> 
		</step> 
		<step id="step_CADB225E027246DB91F97C70EF7C93A3" importance="optional"> 
		  <cmd>(Optional) Read the device-specific information. 
		  </cmd> 
		  <info> 
			 <codeblock outputclass="syntax objective-c" > PTDeviceInformation *devInfo = qosProvider.deviceInformation;
if (devInfo) {
    [consoleView logMessage:@"=== qosDeviceInfo:==\n os =%@\n model = 
       %@\n id =%@\n\n", devInfo.os, devInfo.model, devInfo.id];
}
[NSTimer scheduledTimerWithTimeInterval:2.0 target:self 
   selector:@selector(printPlaybackInfoLog) userInfo:nil repeats:YES];</codeblock> 
		  </info> 
		</step> 
	 </steps> 
  </taskbody> 
</task> 
